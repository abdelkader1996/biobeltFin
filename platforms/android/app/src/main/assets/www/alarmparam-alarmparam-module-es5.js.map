{"version":3,"sources":["./src/app/alarmparam/alarmparam.page.html","./src/app/alarmparam/alarmparam-routing.module.ts","./src/app/alarmparam/alarmparam.module.ts","./src/app/alarmparam/alarmparam.page.scss","./src/app/alarmparam/alarmparam.page.ts"],"names":[],"mappings":"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","file":"alarmparam-alarmparam-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n     <ion-buttons>\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a : {{this.current_ssid}}</ion-button> \\n     </ion-buttons>\\n  </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" id=\\\"refresher\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <h3 style=\\\"text-align: center;\\\">Alarmes </h3>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Réserve active basse</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Notification au serveur</ion-col><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alresbasse\\\" (click)=\\\"changerAlrmResbasse();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Seuil de contenu (%)</ion-col><ion-col size=\\\"6\\\"><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"seuilresbasse\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changeSeuilResBasse();\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Réserve active vide</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Notification au serveur</ion-col><ion-col size=\\\"6\\\"><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alresvide\\\" (click)=\\\"changeAlrmResVide();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Seuil de flux</ion-col><ion-col size=\\\"6\\\"><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"seuilfluxvide\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changeSeuilFluxVide();\\\" type=\\\"tel\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Périodicité du test de réserve vide (min)</ion-col><ion-col size=\\\"6\\\"><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"periodtestvide\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changePeriodVide()\\\" type=\\\"tel\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Pression d'entrée</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Notification au serveur</ion-col><ion-col size=\\\"6\\\"><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alpresentre\\\" (click)=\\\"changeAlrmPresentree();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Seuil de contenu (%)</ion-col><ion-col size=\\\"6\\\"><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"seuilpresentre\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changeSeuilPresentree();\\\" type=\\\"tel\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Pression de sortie</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Notification au serveur</ion-col><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alpresortie\\\" (click)=\\\"changeAlrmResSortie();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Seuil de contenu (%)</ion-col><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"seuilpresortie\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changeSeuilPresSortie();\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align : center;\\\">Débit CO2</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Notification au serveur</ion-col><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"aldebco2\\\" (click)=\\\"changeAlrmDebCo2();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Seuil de contenu (%)</ion-col><ion-col size=\\\"6\\\"><ion-input *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"seuildebco2\\\" enterkeyhint=\\\"enter\\\" (change)=\\\"changeSeuilDebCo2();\\\"></ion-input><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Alimentation</ion-card-title>\\n    <ion-card-content>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Rétablie</ion-col><ion-col size=\\\"6\\\"><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alimret\\\" (click)=\\\"changeAlimRet();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-col></ion-row>\\n      <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\"><ion-col size=\\\"6\\\">Coupée</ion-col><ion-toggle *ngIf=\\\"!redBackground\\\" [(ngModel)]=\\\"alimcoup\\\" (click)=\\\"changeAlimCoup();\\\"></ion-toggle><ion-label *ngIf=\\\"redBackground\\\">-</ion-label></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlarmparamPage } from './alarmparam.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AlarmparamPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AlarmparamPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AlarmparamPageRoutingModule } from './alarmparam-routing.module';\n\nimport { AlarmparamPage } from './alarmparam.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AlarmparamPageRoutingModule\n  ],\n  declarations: [AlarmparamPage]\n})\nexport class AlarmparamPageModule {}\n","module.exports = \"ion-input {\\n  border: solid 1px black;\\n  text-align: center;\\n  color: black;\\n}\\n\\n/*.bgred {\\n\\tbackground-color: red;\\n    color : black;\\n}*/\\n\\nion-row {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWxhcm1wYXJhbS9DOlxcVXNlcnNcXGRldmVsXFxPbmVEcml2ZVxcQnVyZWF1XFxiLURldi9zcmNcXGFwcFxcYWxhcm1wYXJhbVxcYWxhcm1wYXJhbS5wYWdlLnNjc3MiLCJzcmMvYXBwL2FsYXJtcGFyYW0vYWxhcm1wYXJhbS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtBQ0NKOztBRENDOzs7RUFBQTs7QUFJRDtFQUNJLFlBQUE7QUNFSiIsImZpbGUiOiJzcmMvYXBwL2FsYXJtcGFyYW0vYWxhcm1wYXJhbS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taW5wdXR7XG4gICAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGNvbG9yIDogYmxhY2s7XG4gfVxuIC8qLmJncmVkIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGNvbG9yIDogYmxhY2s7XG59Ki9cbmlvbi1yb3cge1xuICAgIGNvbG9yIDogYmxhY2s7XG59XG4iLCJpb24taW5wdXQge1xuICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi8qLmJncmVkIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGNvbG9yIDogYmxhY2s7XG59Ki9cbmlvbi1yb3cge1xuICBjb2xvcjogYmxhY2s7XG59Il19 */\"","import { Component, NgZone, OnInit,ChangeDetectorRef } from '@angular/core';\nimport { Events, Platform } from '@ionic/angular';\nimport { GlobalService } from '../api/global.service';\nimport { CorrespondancesRegistres } from '../model/upcv3/correspondancesRegistres';\nimport { UPCModbus } from '../model/upcv3/upcmodbus';\nimport { Storage } from '@ionic/storage';\n\n\n\n\ndeclare var WifiWizard2: any;\n@Component({\n  selector: 'app-alarmparam',\n  templateUrl: './alarmparam.page.html',\n  styleUrls: ['./alarmparam.page.scss'],\n})\nexport class AlarmparamPage  {\n  do;\n  check=false;\n  current_ssid=\"NO WIFI\"\n  stored_ssid=\"NO WIFI\";\n  password_ssid=\"\";\n  connection_modbus=false;\n  isLoading=false;\n  tryToRead=false;\n\n  upc : UPCModbus;\n  alresbasse : boolean;\n  seuilresbasse : number;\n  alresvide : boolean;\n  seuilfluxvide : number;\n  periodtestvide : number;\n  alpresentre : boolean;\n  seuilpresentre : number;\n  alpresortie : boolean;\n  seuilpresortie : number;\n  aldebco2 : boolean;\n  seuildebco2 : number;\n  alimret : boolean;\n  alimcoup : boolean;\n  name =\"\";\n  redBackground = false;\n  correspondancesRegistres: CorrespondancesRegistres;\n\n  constructor(private global : GlobalService,\n                private storage : Storage, \n\n              private events : Events) {\n                this.global.checkMode()\n               }\n\n\n\n\n\n               ionViewWillEnter(){\n\n                this.tryToRead=true;\n                console.log(\"=========================================================================\") \n                console.log(\"========================== page  ALArm :===============================\") \n                console.log(\"=========================================================================\") \n\n      \n                this.global.connexionRequise = \"UPC\"\n      \n                console.log(\" - Connexion requise :\"+ this.global.connexionRequise)\n                console.log(\" - Connexion  actuel  (avant on read statique) :\"+ this.global.statutConnexion)\n      \n                 this.ConnecterUPC();\n      \n                 this.Read()\n      \n                \n                this.correspondancesRegistres = new CorrespondancesRegistres()\n      \n                               \n               \n        }\n\n  \n        ecrir(variable, value){\n\n          console.log(\" 1-apres ecriture this alarme  basse global  avant e criture:\"+this.global.upcmodbus.alarm.alrResLowEn)\n\n          if(variable.type==\"int\"){\n          this.isLoading=true;\n          this.global.upcmodbus.client.setIntInHoldingRegister(variable.adr, variable.dim,value).then(()=>{\n      \n            console.log(\"accueil ::  ecriture reussie\")\n           \n\n\n            // lecture statique :\n          this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"alarmparam\").then(res=>{   \n         \n          if(res == true){\n            this.isLoading=false;\n            console.log(\"accueil:  lecture reussi \")\n            this.subscribeRefresh()\n            this.events.publish(\"loadParameters\")\n            console.log(\" 2 -apres ecriture this alarme  basse global :\"+this.global.upcmodbus.alarm.alrResLowEn)\n            this.global.lectureStatiqueEnCours = false;\n            this.global.displayLoading = false;\n            this.tryToRead=false;\n          }\n          else{ \n                    this.isLoading=false;\n                    this.global.statutConnexion=\"Aucune\"\n                    this.global.lectureStatiqueEnCours = false;\n                    this.global.displayLoading = false;\n                \n                }      \n        \n        }).catch(err=>{\n          this.isLoading=false;\n          console.log(\"acceuil::erreur lecture\")\n          console.log(err)\n          \n        })\n      \n        //fin de lecture statique :\n      \n      }).catch(()=>{\n        this.isLoading=false;\n        console.log(\"num piege ::écriture impossible\")\n      })\n          }\n          \n          \n          else if(variable.type == \"float\"){\n\n            console.log(\":::::::::::::::::ecrir un flottant :::::::::::::\")\n              this.isLoading=true;\n\n              this.global.upcmodbus.client.setFloatInHoldingRegister(variable.adr, value).then(()=>{\n                        // lecture statique :\n             this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"alarmparam\").then(res=>{   \n         \n            if(res == true){\n              this.isLoading=false;\n              console.log(\"accueil:  lecture reussi \")\n              this.subscribeRefresh()\n              this.events.publish(\"loadParameters\")\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              this.tryToRead=false;\n            }\n            else{ \n                      this.isLoading=false;\n                      this.global.statutConnexion=\"Aucune\"\n                      this.global.lectureStatiqueEnCours = false;\n                      this.global.displayLoading = false;\n                  \n                  }      \n          \n          }).catch(err=>{\n            this.isLoading=false;\n            console.log(\"acceuil::erreur lecture\")\n            console.log(err)\n            \n          })\n            }).catch(()=>{\n              alert(\"écriture impossible\")\n              this.isLoading=false;\n            })\n          }\n          \n          \n          else{\n            this.isLoading=true;\n            this.global.upcmodbus.client.setStringArrayInHoldingResgisters(variable.adr,value).then(()=>{\n        \n              console.log(\"accueil ::  ecriture reussie\")\n             \n              // lecture statique :\n               this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"alarmparam\").then(res=>{   \n           \n            if(res == true){\n              this.isLoading=false;\n              console.log(\"accueil:  lecture reussi \")\n        \n              this.subscribeRefresh()\n              this.events.publish(\"loadParameters\")\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              this.tryToRead=false;\n            }\n            else{ \n                      this.isLoading=false;\n                   \n                      this.global.statutConnexion=\"Aucune\"\n                      this.global.lectureStatiqueEnCours = false;\n                      this.global.displayLoading = false;\n                  \n                  }      \n          \n          }).catch(err=>{\n            this.isLoading=false;\n            console.log(\"acceuil::erreur lecture\")\n            console.log(err)\n            \n          })\n        \n          //fin de lecture statique :\n        \n        }).catch(()=>{\n          this.isLoading=false;\n          console.log(\"num piege ::écriture impossible\")\n        })\n      \n          }\n        }\n\n\n        \n ConnecterUPC(){\n  //connection a l 'UPC :\n  console.log(\"> try  connecter a l upc \")\n  if(this.global.mode != \"modeTest\"){\n\n    this.isLoading=true;\n    this.storage.get(\"ssid_upc\").then(async stored_ssid=>{\n          this.storage.get(\"password\").then(async password=>{\n          this.stored_ssid=stored_ssid;\n          this.password_ssid=password;\n\n            //recuperer l ssid  +password \n            console.log(\"acceuil , stored password\" +password);\n            console.log(\"acceuil , stored ssid\" +stored_ssid);\n\n            //si on est deja connecté a l upc :\n            let wifi = await WifiWizard2.getConnectedSSID()\n\n            console.log(\"connected ssid: \"+wifi)\n\n            if(wifi != stored_ssid){\n            console.log(\"wifi diffrents :\")\n\n            WifiWizard2.connect(stored_ssid, password).then(()=>{\n              //connexion reussi a l UPC  :\n              console.log(\"connexion wifi up reussie :\")\n              this.check=true;\n\n              this.global.statutConnexion=\"UPC\"\n              this.global.onConnectModbus().then(async ()=>{ \n\n               console.log(\"accueil , connexion modbus reussie >> \")\n               this.connection_modbus=true;\n               this.isLoading=false; \n\n               //on peut lire \n               this.tryToRead=true;\n               \n\n               \n                   \n              }).catch(err =>{                   \n                console.log(\"accueil + connexion modbus échouée  \")  \n                this.isLoading=false;   \n                this.connection_modbus=false;          \n\n              })\n             \n             \n    \n              \n            }).catch(()=>{\n             console.log(\"connexion impossible a l'UPC\")\n            })\n          }else{\n            this.global.onConnectModbus().then( ()=>{ //on tente une connexion modbus pour déterminer si c'est un upc\n              //connexion modbus réussie : c'est un upc\n             console.log(\"accueil + connexion modbus reussie \")\n             this.connection_modbus=true;\n             this.isLoading=false; \n\n\n\n            }).catch(err =>{                   \n              console.log(\"accueil + connexion modbus échouée  \")  \n              this.isLoading=false;  \n              this.connection_modbus=false;           \n\n            })\n          }\n\n          })\n\n    })\n\n  }\n\n\n} \nRead(){\n  this.do= setInterval(()=>{\n\n     console.log(\"======================== cycle ================================\")\n     console.log(\"(cycel alar basse)\"+this.alresbasse)\n    \n     this.checkConnectionWifi()\n\n     // en cas de perte de connexion \n     if(this.current_ssid != this.stored_ssid && this.check){\n       console.log(\"wifi diff >>>> \")\n       console.log(\"reconnexion  >>>> \")\n\n       //connecter au wifi \n       this.ConnecterUPC()\n     }\n\n   \n\n      if(this.tryToRead){\n       console.log(\"Try to read >\")\n\n        // lecture statique :\n        this.isLoading=true;\n\n        this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"alarmparam\").then(res=>{   \n        \n         if(res == true){\n           this.isLoading=false;\n           console.log(\">  lecture reussi \")\n           this.subscribeRefresh()\n           this.events.publish(\"loadParameters\")\n           this.global.lectureStatiqueEnCours = false;\n           this.global.displayLoading = false;\n           this.tryToRead=false;\n         }\n         else{ \n                 console.log(\">  lecture echouée  \")\n                 this.isLoading=false;\n                 this.tryToRead=true;\n                 this.global.statutConnexion=\"Aucune\"\n                 this.global.lectureStatiqueEnCours = false;\n                 this.global.displayLoading = false;\n               \n               }      \n       \n       }).catch(err=>{\n         this.tryToRead=true;\n         this.isLoading=false;\n         console.log(\"acceuil::erreur lecture\")\n         console.log(err)\n         \n       })\n\n       //fin de lecture statique :\n\n      }\n\n   },500);\n\n }\n\n \n async checkConnectionWifi(){\n  let wifi = await WifiWizard2.getConnectedSSID()\n  this.current_ssid=wifi;\n}\n\n\n\n\n\n\n\n\n              subscribeRefresh(){\n                this.events.subscribe(\"loadParameters\",($event)=>{\n                  this.alresbasse = this.global.upcmodbus.alarm.alrResLowEn;\n                  this.alresvide = this.global.upcmodbus.alarm.alrResEmptyEn;\n                  this.alpresentre = this.global.upcmodbus.alarm.alrPresInpEn;\n                  this.alpresortie = this.global.upcmodbus.alarm.alrPresOutEn;\n                  this.aldebco2 = this.global.upcmodbus.alarm.alrFlowAvgEn;\n                  this.alimcoup = this.global.upcmodbus.alarm.alrPowDownEn;\n                  this.alimret = this.global.upcmodbus.alarm.alrPowBackEn;\n                  this.seuilresbasse = this.global.upcmodbus.alarm.alrResLowLevel;\n                  this.seuilfluxvide = this.global.upcmodbus.alarm.alrResEmptyFlow;\n                  this.seuilpresentre = this.global.upcmodbus.alarm.alrPresInpTol;\n                  this.seuilpresortie = this.global.upcmodbus.alarm.alrPresOutTol;\n                  this.seuildebco2 = this.global.upcmodbus.alarm.alrFlowSetTol;\n                  this.periodtestvide = this.global.upcmodbus.alarm.alrResEmptyTest;\n                  this.global.ssid = this.global.upcmodbus.communicationParameters.comGsmName;\n                })\n              }\n              \n              changerAlrmResbasse(){\n                console.log(\"=====changement Alarm ResBasse ===\")\n                var alrm = this.alresbasse == true ? 0:1;\n                console.log(\"write :\"+ alrm)\n                console.log(\"============ ===\")\n\n                this.ecrir(this.correspondancesRegistres.alrResLowEn,alrm)\n                \n              }\n              changeSeuilResBasse(){\n                \n                this.ecrir(this.correspondancesRegistres.alrResLowLevel,this.seuilresbasse)\n              }\n              changeAlrmResVide() {\n                var alrm = !(this.alresvide == true ? 1:0);\n                this.ecrir(this.correspondancesRegistres.alrResEmptyEn,alrm)\n              }\n              changeSeuilFluxVide() {\n                this.ecrir(this.correspondancesRegistres.alrResEmptyFlow,this.seuilfluxvide)\n              }\n              changePeriodVide() {              \n                this.ecrir(this.correspondancesRegistres.alrResEmptyTest,this.periodtestvide)\n              }\n              changeAlrmPresentree() {\n                var alrm = !(this.alpresentre == true ?1:0);\n                this.ecrir(this.correspondancesRegistres.alrPressInpEn,alrm)\n              }\n              changeSeuilPresentree() {\n                this.ecrir(this.correspondancesRegistres.alrPressInpTol,this.seuilpresentre)\n              }\n              changeAlrmResSortie() {\n                var alrm = !(this.alpresortie == true ?1 : 0);\n                this.ecrir(this.correspondancesRegistres.alrPressOutEn,alrm)\n              }             \n              changeSeuilPresSortie() {\n                this.ecrir(this.correspondancesRegistres.alrPressOutTol,this.seuilpresortie)\n              }\n              changeAlrmDebCo2() {\n                var alrm = !(this.aldebco2 == true ? 1:0);\n                this.ecrir(this.correspondancesRegistres.alrFlowAvgEn,alrm)\n              }\n              changeSeuilDebCo2() {\n                this.ecrir(this.correspondancesRegistres.alrFlowSetTol,this.seuildebco2)\n              }\n              changeAlimRet() {\n                var alrm = !(this.alimret == true ? 1:0);\n                this.ecrir(this.correspondancesRegistres.alrPowBackEn,alrm)\n              }\n              changeAlimCoup() {\n                var alrm = !(this.alimcoup == true ? 1:0);\n                this.ecrir(this.correspondancesRegistres.alrPowDownEn,alrm)\n              }\n\n\n              ionViewWillLeave(){\n\n\n                console.log(\"quitter la page  :\")  \n                clearInterval(this.do)\n            \n              }\n\n              \n\n            \n\n}"],"sourceRoot":""}