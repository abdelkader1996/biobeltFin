{"version":3,"sources":["./src/app/namepiege/namepiege.page.html","./src/app/namepiege/namepiege-routing.module.ts","./src/app/namepiege/namepiege.module.ts","./src/app/namepiege/namepiege.page.scss","./src/app/namepiege/namepiege.page.ts"],"names":[],"mappings":"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","file":"namepiege-namepiege-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n     <ion-buttons>\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a : {{this.current_ssid}}</ion-button> \\n     </ion-buttons>\\n  </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" id=\\\"refresher\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <h3 style=\\\"text-align: center;\\\">Paramètres Généraux UPC</h3>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-row><ion-col size=\\\"6\\\">Nom de l'UPC</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"name\\\" enterkeyhint=\\\"enter\\\" placeholder=\\\"Nom de l'UPC...\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeName();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Nombre de pièges</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"nbpiege\\\" enterkeyhint=\\\"enter\\\" placeholder=\\\"Nombre de pièges...\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangePieges();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">UUID</ion-col><ion-col size=\\\"6\\\">{{uuid}}</ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Fuseau Horaire (h)</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"fusehor\\\" enterkeyhint=\\\"enter\\\" type=\\\"number\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeFusHor()\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Horloge</ion-col><ion-col size=\\\"6\\\">{{horloge}}</ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Firmware</ion-col><ion-col size=\\\"6\\\">{{\\\"v\\\"+firm}}</ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n\\n  <div style=\\\"text-align: center;\\\">\\n  <ion-button color=\\\"danger\\\" (click)=\\\"onWipe();\\\">\\n    WIPE\\n  </ion-button>\\n  <ion-button color=\\\"warning\\\" (click)=\\\"onReset();\\\">RESET</ion-button>\\n</div>\\n</ion-content>\\n<ion-footer style=\\\"display: inline-block\\\">\\n  <ion-button *ngIf=\\\"!this.isLoading\\\" style=\\\"float: left\\\" fill=\\\"clear\\\" (click)=\\\"this.ionViewWillEnter()\\\">    \\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\n    hhhh\\n  </ion-button>\\n  <ion-button *ngIf=\\\"this.isLoading\\\" style=\\\"float: left;\\\" fill=\\\"clear\\\" color=\\\"primary\\\">\\n    <ion-spinner></ion-spinner>\\n  </ion-button>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NamepiegePage } from './namepiege.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NamepiegePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NamepiegePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NamepiegePageRoutingModule } from './namepiege-routing.module';\n\nimport { NamepiegePage } from './namepiege.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NamepiegePageRoutingModule\n  ],\n  declarations: [NamepiegePage]\n})\nexport class NamepiegePageModule {}\n","module.exports = \"ion-input {\\n  border: solid 1px black;\\n  text-align: center;\\n  color: black;\\n}\\n\\nion-col {\\n  color: black;\\n}\\n\\n/*.bgred {\\n\\tbackground-color: red;\\n    color : black;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmFtZXBpZWdlL0M6XFxVc2Vyc1xcZGV2ZWxcXE9uZURyaXZlXFxCdXJlYXVcXGItRGV2L3NyY1xcYXBwXFxuYW1lcGllZ2VcXG5hbWVwaWVnZS5wYWdlLnNjc3MiLCJzcmMvYXBwL25hbWVwaWVnZS9uYW1lcGllZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7QUNFSjs7QURDQTs7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9uYW1lcGllZ2UvbmFtZXBpZWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dHtcbiAgICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcbiAgICB0ZXh0LWFsaWduIDpjZW50ZXI7XG4gICAgY29sb3IgOiBibGFjaztcbiB9XG5pb24tY29sIHtcbiAgICBjb2xvcjogYmxhY2s7XG59XG5cbi8qLmJncmVkIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGNvbG9yIDogYmxhY2s7XG59Ki9cblxuIiwiaW9uLWlucHV0IHtcbiAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5pb24tY29sIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4vKi5iZ3JlZCB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICBjb2xvciA6IGJsYWNrO1xufSovIl19 */\"","import { Component, NgZone, OnInit, ChangeDetectorRef } from \"@angular/core\";\nimport { GlobalService } from \"../api/global.service\";\nimport { UPCModbus } from \"src/app/model/upcv3/upcmodbus\";\nimport { Storage } from \"@ionic/storage\";\nimport { Router } from \"@angular/router\";\n\nimport { AlertController, Events, Platform } from \"@ionic/angular\";\nimport { CorrespondancesRegistres } from \"../model/upcv3/correspondancesRegistres\";\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: \"app-namepiege\",\n  templateUrl: \"./namepiege.page.html\",\n  styleUrls: [\"./namepiege.page.scss\"],\n})\nexport class NamepiegePage {\n  do;\n  check = false;\n  current_ssid = \"NO WIFI\";\n  stored_ssid = \"NO WIFI\";\n  password_ssid = \"\";\n  connection_modbus = false;\n  isLoading = false;\n  tryToRead = false;\n  name: string = \"\";\n  nbpiege: number = 0;\n  upc: UPCModbus;\n  uuid: string = \"\";\n  fusehor: number;\n  horloge: string;\n  aube: string;\n  crep: string;\n  langue: string;\n  firm: string = \"\";\n  redBackground = false;\n  length = 0;\n  correspondancesRegistres: CorrespondancesRegistres;\n  // Pièges sauvegardes plan\n  constructor(\n    private global: GlobalService,\n    private storage: Storage,\n    private alertCTRL: AlertController,\n    private events: Events\n  ) {\n    this.global.checkMode();\n  }\n\n  ionViewWillEnter() {\n    this.tryToRead = true;\n    console.log(\n      \"=========================================================================\"\n    );\n    console.log(\n      \"========================== page  accueil :===============================\"\n    );\n    console.log(\n      \"=========================================================================\"\n    );\n\n    this.global.connexionRequise = \"UPC\";\n\n    console.log(\" - Connexion requise :\" + this.global.connexionRequise);\n    console.log(\n      \" - Connexion  actuel  (avant on read statique) :\" +\n        this.global.statutConnexion\n    );\n\n    this.ConnecterUPC();\n\n    this.Read();\n\n    this.correspondancesRegistres = new CorrespondancesRegistres();\n\n    this.horloge = this.global.upcmodbus.general.upcClock;\n  }\n\n  ConnecterUPC() {\n    //connection a l 'UPC :\n    console.log(\"> try  connecter a l upc \");\n    if (this.global.mode != \"modeTest\") {\n      this.isLoading = true;\n      this.storage.get(\"ssid_upc\").then(async (stored_ssid) => {\n        this.storage.get(\"password\").then(async (password) => {\n          this.stored_ssid = stored_ssid;\n          this.password_ssid = password;\n\n          //recuperer l ssid  +password\n          console.log(\"acceuil , stored password\" + password);\n          console.log(\"acceuil , stored ssid\" + stored_ssid);\n\n          //si on est deja connecté a l upc :\n          let wifi = await WifiWizard2.getConnectedSSID();\n\n          console.log(\"connected ssid: \" + wifi);\n\n          if (wifi != stored_ssid) {\n            console.log(\"wifi diffrents :>>>>>>>>>\");\n\n            console.log(\"connecte wifi \");\n            WifiWizard2.connect(stored_ssid, password)\n              .then(() => {\n                //connexion reussi a l UPC  :\n                console.log(\"connexion wifi up reussie :\");\n                this.check = true;\n\n                this.global.statutConnexion = \"UPC\";\n                this.global\n                  .onConnectModbus()\n                  .then(async () => {\n                    console.log(\"accueil , connexion modbus reussie >> \");\n                    this.connection_modbus = true;\n                    this.isLoading = false;\n\n                    //on peut lire\n                    this.tryToRead = true;\n                  })\n                  .catch((err) => {\n                    console.log(\"accueil + connexion modbus échouée  \");\n                    this.isLoading = false;\n                    this.connection_modbus = false;\n                  });\n              })\n              .catch((err) => {\n                console.log(\"connexion impossible a l'UPC wifi\");\n                console.log(err);\n              });\n          } else {\n            this.global\n              .onConnectModbus()\n              .then(() => {\n                //on tente une connexion modbus pour déterminer si c'est un upc\n                //connexion modbus réussie : c'est un upc\n                console.log(\"accueil + connexion modbus reussie \");\n                this.connection_modbus = true;\n                this.isLoading = false;\n              })\n              .catch((err) => {\n                console.log(\"accueil + connexion modbus échouée  \");\n                this.isLoading = false;\n                this.connection_modbus = false;\n              });\n          }\n        });\n      });\n    }\n  }\n\n  Read() {\n    this.do = setInterval(async () => {\n      console.log(\n        \"======================== cycle ================================\"\n      );\n\n      this.checkConnectionWifi();\n\n      // en cas de perte de connexion\n      if (this.current_ssid != this.stored_ssid) {\n        console.log(\"wifi diff >>>> \");\n        console.log(\"disconnect \");\n        let res = await WifiWizard2.disconnect(this.current_ssid)\n          .then((result) => {\n            console.log(\"connect \");\n            this.ConnecterUPC();\n          })\n          .catch((err) => {});\n        console.log(res);\n        //connecter au wifi\n        console.log(\"reconnexion  >>>> \");\n      }\n\n      if (this.tryToRead && this.global.upcmodbus.state == 1) {\n        console.log(\"Try to read >\");\n\n        // lecture statique :\n        this.isLoading = true;\n\n        this.global.upcmodbus\n          .onReadStatique(this.global.upcname, this.global.mode, \"namepiege\")\n          .then((res) => {\n            if (res == true) {\n              this.tryToRead = false;\n              this.isLoading = false;\n              console.log(\">  lecture reussi \");\n              this.subscribeRefresh();\n              this.events.publish(\"loadParameters\");\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              this.tryToRead = false;\n            } else {\n              console.log(\">  lecture echouée  \");\n              this.isLoading = false;\n              this.tryToRead = true;\n              this.global.statutConnexion = \"Aucune\";\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n            }\n          })\n          .catch((err) => {\n            this.tryToRead = true;\n            this.isLoading = false;\n            console.log(\"acceuil::erreur lecture\");\n            console.log(err);\n          });\n\n        //fin de lecture statique :\n      }\n    }, 500);\n  }\n\n  ngOnInit() {}\n\n  async checkConnectionWifi() {\n    console.log(\"check wifi conx\");\n    let wifi = await WifiWizard2.getConnectedSSID();\n    console.log(wifi);\n    this.current_ssid = wifi;\n  }\n\n  doRefresh(event) {\n    this.ionViewWillEnter();\n    event.target.complete();\n  }\n\n  toZero4(d) {\n    return (\"0000\" + (+d).toString(16)).substr(-4);\n  }\n\n  onChangeName() {\n    console.log(\" Accueil :: ecrir : nome upc  \");\n    this.ecrir(this.correspondancesRegistres.upcNameId, this.name);\n  }\n  onChangePieges() {\n    console.log(\" Accueil :: ecrir : num piege \");\n    this.ecrir(this.correspondancesRegistres.upcTrapNum, this.nbpiege);\n  }\n\n  ecrir(variable, value) {\n    if (variable.type == \"int\") {\n      this.isLoading = true;\n      this.global.upcmodbus.client\n        .setIntInHoldingRegister(variable.adr, variable.dim, value)\n        .then(() => {\n          console.log(\"accueil ::  ecriture reussie\");\n\n          // lecture statique :\n          this.global.upcmodbus\n            .onReadStatique(this.global.upcname, this.global.mode, \"namepiege\")\n            .then((res) => {\n              if (res == true) {\n                this.isLoading = false;\n                console.log(\"accueil:  lecture reussi \");\n\n                this.subscribeRefresh();\n                this.events.publish(\"loadParameters\");\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n                this.tryToRead = false;\n              } else {\n                this.isLoading = false;\n\n                this.global.statutConnexion = \"Aucune\";\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(\"acceuil::erreur lecture\");\n              console.log(err);\n            });\n\n          //fin de lecture statique :\n        })\n        .catch(() => {\n          this.isLoading = false;\n          console.log(\"num piege ::écriture impossible\");\n        });\n    } else {\n      this.isLoading = true;\n      this.global.upcmodbus.client\n        .setStringArrayInHoldingResgisters(variable, value)\n        .then(() => {\n          console.log(\"accueil ::  ecriture reussie\");\n\n          // lecture statique :\n          this.global.upcmodbus\n            .onReadStatique(this.global.upcname, this.global.mode, \"namepiege\")\n            .then((res) => {\n              if (res == true) {\n                this.isLoading = false;\n                console.log(\"accueil:  lecture reussi \");\n\n                this.subscribeRefresh();\n                this.events.publish(\"loadParameters\");\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n                this.tryToRead = false;\n              } else {\n                this.isLoading = false;\n\n                this.global.statutConnexion = \"Aucune\";\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(\"acceuil::erreur lecture\");\n              console.log(err);\n            });\n\n          //fin de lecture statique :\n        })\n        .catch(() => {\n          this.isLoading = false;\n          console.log(\"num piege ::écriture impossible\");\n        });\n    }\n  }\n  async onWipe() {\n    let alert = await this.alertCTRL.create({\n      message: \"Êtes vous sûr d'effectuer un Wipe ?\",\n      buttons: [\n        { text: \"Non\" },\n        {\n          text: \"Oui\",\n          handler: () => {\n            // ecrire la commande  EEEE dans 40011 pour faire un wipe\n            this.global.upcmodbus.client\n              .setIntInHoldingRegister(40011, 1, 61166)\n              .then((res) => {\n                var d = new Date();\n                this.global.logs.push(\n                  this.global.msToTime(d.getTime()) + \" - écriture réussie\"\n                );\n                this.subscribeRefresh();\n                this.global.ecritureEnCours = false;\n              })\n              .catch((err) => {\n                var d = new Date();\n                this.global.logs.push(\n                  this.global.msToTime(d.getTime()) + \" - écriture échouée\"\n                );\n                this.subscribeRefresh();\n                this.global.ecritureEnCours = false;\n              });\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n\n  async onReset() {\n    let alert = await this.alertCTRL.create({\n      message: \"Êtes vous sûr d'effectuer un Reset ?\",\n      buttons: [\n        { text: \"Non\" },\n        {\n          text: \"Oui\",\n          handler: () => {\n            // ecrire la commande  EEEE dans 40011 pour faire un wipe\n            this.global.upcmodbus.client\n              .setIntInHoldingRegister(40011, 1, 65535)\n              .then((res) => {\n                var d = new Date();\n                this.global.logs.push(\n                  this.global.msToTime(d.getTime()) + \" - écriture réussie\"\n                );\n                this.subscribeRefresh();\n                this.global.ecritureEnCours = false;\n              })\n              .catch((err) => {\n                var d = new Date();\n                this.global.logs.push(\n                  this.global.msToTime(d.getTime()) + \" - écriture échouée\"\n                );\n                this.subscribeRefresh();\n                this.global.ecritureEnCours = false;\n              });\n          },\n        },\n      ],\n    });\n    alert.present();\n  }\n  /*\n  async onReset() {\n    let alert = await this.alertCTRL.create({message : \"Êtes vous sûr d'effectuer un Reset ?\",\n                                             buttons : [{text : \"Non\"},{text : \"Oui\", handler : ()=>{\n                                              this.global.onWriteModbusVariables().then(res=>{\n                                                var d = new Date()\n                                                this.global.logs.push(this.global.msToTime(d.getTime())+\" - début écriture\")\n                                                this.global.ecritureEnCours = true;\n                                                this.global.upcmodbus.client.setIntInHoldingRegister(40011,1,65535).then(res=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture réussie\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false;                                                \n                                                }).catch(err=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture échouée\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false; \n                                                })                                                 \n                                              })\n                                                \n                                              \n                                             }}]\n    })\n    alert.present();\n    \n  }*/\n  onChangeFusHor() {\n    this.ecrir(this.correspondancesRegistres.upcTimeZone, this.fusehor);\n  }\n\n  unsubscribeRefresh() {\n    this.events.unsubscribe(\"loadParameters\");\n  }\n\n  subscribeRefresh() {\n    var d = new Date();\n    this.global.logs.push(this.global.msToTime(d.getTime()) + \" - subscribe\");\n    this.events.subscribe(\"loadParameters\", ($event) => {\n      this.name = this.global.upcmodbus.nameId;\n      this.length = this.name.length;\n\n      this.nbpiege = this.global.upcmodbus.general.upcTrapNum;\n\n      this.uuid = this.global.upcmodbus.general.upcMcuUid;\n\n      this.fusehor = this.global.upcmodbus.general.upcTimeZone;\n\n      this.firm = \"\" + this.global.upcmodbus.general.upcFwVer;\n\n      this.horloge = this.global.upcmodbus.general.upcClock;\n    });\n  }\n\n  ionViewWillLeave() {\n    console.log(\"quitter la page  :\");\n    clearInterval(this.do);\n  }\n}\n"],"sourceRoot":""}