{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-content class=\\\"bg-light\\\" *ngIf=\\\"needToLog\\\">\\r\\n  <ion-row justify-content-center align-items-center>\\r\\n    <ion-col col-12 col-sm-10 col-md-6 col-lg-5 col-xl-4>\\r\\n      <ion-card>\\r\\n        <!-- Image -->\\r\\n        <img src=\\\"assets/bg_logo.png\\\" />\\r\\n\\r\\n        <!-- Content -->\\r\\n        <ion-card-content>\\r\\n          <!-- Title -->\\r\\n          <ion-card-title>Se connecter</ion-card-title>\\r\\n\\r\\n          <!-- Login form -->\\r\\n          <form #loginForm=\\\"ngForm\\\" (ngSubmit)=\\\"login()\\\" autocomplete=\\\"off\\\">\\r\\n            <ion-list inset>\\r\\n              <ion-item>\\r\\n                <ion-input\\r\\n                  placeholder=\\\"Email\\\"\\r\\n                  name=\\\"username\\\"\\r\\n                  type=\\\"email\\\"\\r\\n                  required\\r\\n                  [(ngModel)]=\\\"username\\\"\\r\\n                  #email\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n\\r\\n              <ion-item>\\r\\n                <ion-input\\r\\n                  placeholder=\\\"Mot de passe\\\"\\r\\n                  name=\\\"password\\\"\\r\\n                  type=\\\"password\\\"\\r\\n                  required\\r\\n                  [(ngModel)]=\\\"password\\\"\\r\\n                ></ion-input>\\r\\n              </ion-item>\\r\\n            </ion-list>\\r\\n\\r\\n            <ion-button\\r\\n              class=\\\"submit-btn\\\"\\r\\n              color=\\\"primary\\\"\\r\\n              full\\r\\n              type=\\\"submit\\\"\\r\\n              [disabled]=\\\"!loginForm.form.valid\\\"\\r\\n              margin-top\\r\\n              >Se connecter</ion-button\\r\\n            >\\r\\n            <!--<ion-button class=\\\"submit-btn\\\" color=\\\"primary\\\" full margin-top (click)=\\\"onBBAM();\\\">Hors Connexion</ion-button>-->\\r\\n          </form>\\r\\n        </ion-card-content>\\r\\n        <ion-button\\r\\n          class=\\\"submit-btn\\\"\\r\\n          color=\\\"primary\\\"\\r\\n          full\\r\\n          (click)=\\\"passerAuModeTest()\\\"\\r\\n          margin-top\\r\\n          >ne pas se connecter</ion-button\\r\\n        >\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-content>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Upcv3serviceService } from \"../api/upcv3service.service\";\r\nimport {\r\n  ToastController,\r\n  NavController,\r\n  LoadingController,\r\n  Platform,\r\n} from \"@ionic/angular\";\r\nimport { User } from \"../model/user\";\r\nimport { Storage } from \"@ionic/storage\";\r\nimport { Hotspot } from \"@ionic-native/hotspot/ngx\";\r\nimport { Network } from \"@ionic-native/network/ngx\";\r\n\r\ndeclare var WifiWizard2: any;\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.page.html\",\r\n  styleUrls: [\"./login.page.scss\"],\r\n})\r\nexport class LoginPage implements OnInit {\r\n  @ViewChild(\"email\", { static: false }) email: any;\r\n  private username: string;\r\n  private password: string;\r\n  private needToLog = true;\r\n\r\n  constructor(\r\n    private upc3serv: Upcv3serviceService,\r\n    public navCtrl: NavController,\r\n    public toastCtrl: ToastController,\r\n    public loadingCtrl: LoadingController,\r\n    private storage: Storage,\r\n    private platform: Platform,\r\n    private hotspot: Hotspot,\r\n    private network: Network\r\n  ) {}\r\n  async ngOnInit() {\r\n    console.log(\r\n      \"============================= LogIn : ng on Init =============================\"\r\n    );\r\n    this.storage.set(\"reconnect\", true);\r\n    localStorage.setItem(\"BBAM\", null);\r\n    await this.storage.get(\"user\").then(async (res) => {\r\n      this.username = res;\r\n    });\r\n    await this.storage.get(\"pass\").then(async (res) => {\r\n      this.password = res;\r\n    });\r\n\r\n    /*\r\n    await this.storage.get('remember').then(async res=>{\r\n      if (res === 1){  \r\n        this.needToLog = false;           \r\n        this.navCtrl.navigateRoot('home');\r\n      }\r\n      else {\r\n        this.needToLog = true;\r\n      }\r\n    })  */\r\n  }\r\n\r\n  passerAuModeTest() {\r\n    this.storage.set(\"mode_test\", true);\r\n    this.navCtrl.navigateRoot(\"home\");\r\n  }\r\n\r\n  async login() {\r\n    console.log(\r\n      \"============================= LogIn : login =============================\"\r\n    );\r\n\r\n    // Show loading\r\n    const loading = await this.loadingCtrl.create({\r\n      message: \"Connexion en cours...\",\r\n    });\r\n    loading.present();\r\n\r\n    // Request\r\n    let user: User = new User();\r\n    user.username = this.username;\r\n    user.password = this.password;\r\n    this.upc3serv.login(user).subscribe(\r\n      async (data) => {\r\n        // Hide loading\r\n        loading.dismiss();\r\n\r\n        // Check state\r\n        if (data.result) {\r\n          this.storage.set(\"mod_test\", false);\r\n\r\n          this.storage.set(\"token\", data.result);\r\n          localStorage.setItem(\"token\", data.result);\r\n          this.storage.set(\"user\", user.username);\r\n          this.storage.set(\"pass\", user.password);\r\n          this.storage.set(\"remember\", 1);\r\n          this.navCtrl.navigateRoot(\"home\");\r\n          this.storage.set(\"mode_test\", false);\r\n        } else {\r\n          // Check code\r\n          switch (data.code) {\r\n            case \"TOKEN_WRONG_IDENTIFIERS\":\r\n              let toast = await this.toastCtrl.create({\r\n                message: \"Identifiants incorrects !\",\r\n                duration: 3000,\r\n                position: \"top\",\r\n              });\r\n              toast.present();\r\n              break;\r\n          }\r\n        }\r\n      },\r\n      async (err) => {\r\n        alert(JSON.stringify(err));\r\n        // Hide loading\r\n        loading.dismiss();\r\n\r\n        let toast = await this.toastCtrl.create({\r\n          message: \"Impossible de se connecter à internet !\",\r\n          duration: 3000,\r\n          position: \"bottom\",\r\n        });\r\n        toast.present();\r\n      }\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}