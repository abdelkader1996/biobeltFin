{"version":3,"sources":["./src/app/testmode/testmode.page.html","./src/app/testmode/testmode-routing.module.ts","./src/app/testmode/testmode.module.ts","./src/app/testmode/testmode.page.scss","./src/app/testmode/testmode.page.ts"],"names":[],"mappings":"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","file":"testmode-testmode-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\n  <ion-list *ngFor=\\\"let w of wifinfo\\\">\\n    <ion-item (click)=\\\"onConnect(w);\\\" button>\\n      <ion-icon name=\\\"wifi\\\"></ion-icon><ion-label>{{w}}</ion-label>\\n      <ion-ripple-effect type=\\\"bounded\\\"></ion-ripple-effect>\\n    </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TestmodePage } from './testmode.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TestmodePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TestmodePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { TestmodePageRoutingModule } from './testmode-routing.module';\n\nimport { TestmodePage } from './testmode.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TestmodePageRoutingModule\n  ],\n  declarations: [TestmodePage]\n})\nexport class TestmodePageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3Rtb2RlL3Rlc3Rtb2RlLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AlertController, Platform, ToastController } from '@ionic/angular';\nimport { GlobalService } from '../api/global.service';\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: 'app-testmode',\n  templateUrl: './testmode.page.html',\n  styleUrls: ['./testmode.page.scss'],\n})\nexport class TestmodePage implements OnInit {\n  wifinfo = [];\n  constructor(\n    private global : GlobalService,\n    private platform : Platform,\n    private alrtContr : AlertController,\n    private toastCtrl : ToastController\n  ){\n    this.global.checkMode()\n   }\n\n  async ngOnInit() {\n    \n    //this.wifinfo.push(localStorage.getItem(\"ssid\"));\n    if(this.platform.is(\"android\")){\n      WifiWizard2.scan().then(res=>{\n        //alert(JSON.stringify(res));\n        res.forEach((item)=>{\n          \n          if(item.SSID.includes(\"BBAM\") ){\n            this.wifinfo.push(item.SSID);\n          }\n        })\n      })\n    } else if(this.platform.is(\"ios\")){\n        //this.wifinfo = [\"BBAM\",\"BBAM2\",\"BBAM3\",\"BBAM4\",\"BBAM5\",\"BBAM6\",\"BBAM7\",\"BBAM8\",\"BBAM9\"];\n        \n        WifiWizard2.getConnectedSSID().then(async res=>{\n          if(!res.includes(\"BBAM\")){\n            localStorage.removeItem(\"isConnected\");\n            this.presentAlert();\n          } else {\n            let toast = await this.toastCtrl.create({\n              message : \"Vous êtes déjà connecté à l'UPC\",\n              duration : 3000,\n              position : \"middle\"\n            })\n            toast.present();\n          }\n        })\n        \n    }\n    \n  }\n  onConnect (ssid) {\n    \n    localStorage.setItem(\"ssid\",ssid);\n    localStorage.removeItem(\"isConnected\");\n    \n  }\n  async presentAlert() {\n    const alrt = await this.alrtContr.create({\n      cssClass: 'my-custom-class',\n      header: 'Connexion',\n      message: \"Veuillez  vous connecter à l'UPC via le WIFi\",\n      buttons: [{text : 'OK', handler: ()=>{\n      \n          this.global.upcmodbus.client.getStringFromHoldingRegister(40001,10).then(res=>{\n              localStorage.setItem(\"upcname\",res);\n              alert(\"UPC: \"+res);\n          }).catch(err=>{\n            this.representAlert();\n          })\n      \n      }}]\n    });\n\n    await alrt.present();\n\n    const { role } = await alrt.onDidDismiss();\n    console.log('onDidDismiss resolved with role', role);\n  }\n  async representAlert() {\n      const alrt = await this.alrtContr.create({\n        cssClass: 'my-custom-class',\n        header: 'Connexion',\n        message: \"Veuillez  vous connecter à l'UPC via le WIFi\",\n        buttons: [{text : 'OK', handler: ()=>{\n         \n            this.global.upcmodbus.client.getStringFromHoldingRegister(40001,10).then(res=>{\n                localStorage.setItem(\"upcname\",res);\n            }).catch(err=>{\n              this.representAlert();\n            })\n         \n        }},{text : \"Annuler\"}]\n      });\n\n      await alrt.present();\n\n      const { role } = await alrt.onDidDismiss();\n      console.log('onDidDismiss resolved with role', role);\n  }\n\n}\n"],"sourceRoot":""}