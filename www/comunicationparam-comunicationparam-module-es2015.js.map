{"version":3,"sources":["./src/app/comunicationparam/comunicationparam.page.html","./src/app/comunicationparam/comunicationparam-routing.module.ts","./src/app/comunicationparam/comunicationparam.module.ts","./src/app/comunicationparam/comunicationparam.page.scss","./src/app/comunicationparam/comunicationparam.page.ts"],"names":[],"mappings":"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","file":"comunicationparam-comunicationparam-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n     <ion-buttons>\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a : {{this.current_ssid}}</ion-button> \\n     </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" id=\\\"refresher\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <h3 style=\\\"text-align: center;\\\">Paramètres de Communication </h3>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">Serveur</ion-card-title>\\n    <ion-card-content>\\n      <ion-row ><ion-col size=\\\"6\\\">URL</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"url\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeURL();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">IP</ion-col><ion-col size=\\\"6\\\">{{adIp}}</ion-col></ion-row>\\n\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">ModBus</ion-card-title>\\n    <ion-card-content>\\n      <ion-row ><ion-col size=\\\"6\\\">Identifiant</ion-col> <ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"modemGSM\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeMDMGSM();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">MdP</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"modemGSMpass\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeMDMGSMPass();\\\"></ion-input></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">WiFi</ion-card-title>\\n    <ion-card-content>\\n      <ion-row ><ion-col size=\\\"6\\\">SSID</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"ssid\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeSSID();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">MdP</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"password\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeMDP();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">Canal RF</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"channel\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeChannel();\\\"></ion-input></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n  <ion-card>\\n    <ion-card-title style=\\\"text-align: center;\\\">APN</ion-card-title>\\n    <ion-card-content>\\n      <ion-row ><ion-col size=\\\"6\\\">Identifiant</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"apn\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeAPNURL()\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">Utilisateur</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"apnuser\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeAPNUS()\\\"></ion-input></ion-col></ion-row>\\n      <ion-row ><ion-col size=\\\"6\\\">MdP</ion-col><ion-col size=\\\"6\\\"><ion-input  [(ngModel)]=\\\"apnpass\\\" enterkeyhint=\\\"enter\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeAPNPass();\\\"></ion-input></ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n\\n<ion-footer style=\\\"display: inline-block\\\">\\n  <ion-button *ngIf=\\\"!global.displayLoading\\\" style=\\\"float: left\\\" fill=\\\"clear\\\" (click)=\\\"global.onReadStatiqueEnable()\\\">    \\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\n  </ion-button>\\n  <ion-button *ngIf=\\\"global.displayLoading\\\" style=\\\"float: left;\\\" fill=\\\"clear\\\" color=\\\"primary\\\">\\n    <ion-spinner></ion-spinner>\\n  </ion-button> \\n  \\n\\n</ion-footer>\\n\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ComunicationparamPage } from './comunicationparam.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ComunicationparamPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ComunicationparamPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComunicationparamPageRoutingModule } from './comunicationparam-routing.module';\n\nimport { ComunicationparamPage } from './comunicationparam.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComunicationparamPageRoutingModule\n  ],\n  declarations: [ComunicationparamPage]\n})\nexport class ComunicationparamPageModule {}\n","module.exports = \"ion-input {\\n  border: solid 1px black;\\n  text-align: center;\\n  color: black;\\n}\\n\\n/*.bgred {\\n\\tbackground-color: red;\\n    color : black;\\n}*/\\n\\nion-col {\\n  color: black;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tdW5pY2F0aW9ucGFyYW0vQzpcXFVzZXJzXFxkZXZlbFxcT25lRHJpdmVcXEJ1cmVhdVxcYi1EZXYvc3JjXFxhcHBcXGNvbXVuaWNhdGlvbnBhcmFtXFxjb211bmljYXRpb25wYXJhbS5wYWdlLnNjc3MiLCJzcmMvYXBwL2NvbXVuaWNhdGlvbnBhcmFtL2NvbXVuaWNhdGlvbnBhcmFtLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0FDQ0o7O0FERUM7OztFQUFBOztBQUlEO0VBQ0ksWUFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvY29tdW5pY2F0aW9ucGFyYW0vY29tdW5pY2F0aW9ucGFyYW0ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWlucHV0e1xuICAgIGJvcmRlcjogc29saWQgMXB4IGJsYWNrO1xuICAgIHRleHQtYWxpZ24gOmNlbnRlcjtcbiAgICBjb2xvcjogYmxhY2s7XG4gfVxuXG4gLyouYmdyZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3IgOiBibGFjaztcbn0qL1xuaW9uLWNvbCB7XG4gICAgY29sb3IgOiBibGFjaztcbn1cbiIsImlvbi1pbnB1dCB7XG4gIGJvcmRlcjogc29saWQgMXB4IGJsYWNrO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGNvbG9yOiBibGFjaztcbn1cblxuLyouYmdyZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3IgOiBibGFjaztcbn0qL1xuaW9uLWNvbCB7XG4gIGNvbG9yOiBibGFjaztcbn0iXX0= */\"","import { ChangeDetectorRef, Component, NgZone, OnInit } from '@angular/core';\nimport { Events, Platform } from '@ionic/angular';\nimport { GlobalService } from '../api/global.service';\nimport { Storage } from '@ionic/storage';\n\nimport { CorrespondancesRegistres } from '../model/upcv3/correspondancesRegistres';\nimport { UPCModbus } from '../model/upcv3/upcmodbus';\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: 'app-comunicationparam',\n  templateUrl: './comunicationparam.page.html',\n  styleUrls: ['./comunicationparam.page.scss'],\n})\nexport class ComunicationparamPage {\n  do;\n  check=false;\n  current_ssid=\"NO WIFI\"\n  stored_ssid=\"NO WIFI\";\n  password_ssid=\"\";\n  connection_modbus=false;\n  isLoading=false;\n  tryToRead=false;\n  upc : UPCModbus;\n  modemGSM : string;\n  modemGSMpass : string;\n  ssid : string;\n  password : string;\n  channel : number;\n  url : string;\n  apn : string;\n  apnuser:string;\n  apnpass:string;\n  adIp : string;\n  redBackground = false;\n  correspondancesRegistres: CorrespondancesRegistres;\n\n  constructor(private global : GlobalService,\n              private storage : Storage,\n              private events : Events) { \n                this.global.checkMode()\n              }\n\n  ionViewWillEnter(){\n  \n    this.tryToRead=true;\n    console.log(\"=========================================================================\") \n    console.log(\"========================== page  accueil :===============================\") \n    console.log(\"=========================================================================\") \n\n    this.global.connexionRequise = \"UPC\"\n\n    console.log(\" - Connexion requise :\"+ this.global.connexionRequise)\n    console.log(\" - Connexion  actuel  (avant on read statique) :\"+ this.global.statutConnexion)\n\n     this.ConnecterUPC();\n\n     this.Read()\n\n    \n    this.correspondancesRegistres = new CorrespondancesRegistres()                   \n              \n  }\n\n  \n ConnecterUPC(){\n  //connection a l 'UPC :\n  console.log(\"> try  connecter a l upc \")\n  if(this.global.mode != \"modeTest\"){\n\n    this.isLoading=true;\n    this.storage.get(\"ssid_upc\").then(async stored_ssid=>{\n          this.storage.get(\"password\").then(async password=>{\n          this.stored_ssid=stored_ssid;\n          this.password_ssid=password;\n\n            //recuperer l ssid  +password \n            console.log(\"acceuil , stored password\" +password);\n            console.log(\"acceuil , stored ssid\" +stored_ssid);\n\n            //si on est deja connecté a l upc :\n            let wifi = await WifiWizard2.getConnectedSSID()\n\n            console.log(\"connected ssid: \"+wifi)\n\n            if(wifi != stored_ssid){\n            console.log(\"wifi diffrents :\")\n\n            WifiWizard2.connect(stored_ssid, password).then(()=>{\n              //connexion reussi a l UPC  :\n              console.log(\"connexion wifi up reussie :\")\n              this.check=true;\n\n              this.global.statutConnexion=\"UPC\"\n              this.global.onConnectModbus().then(async ()=>{ \n\n               console.log(\"accueil , connexion modbus reussie >> \")\n               this.connection_modbus=true;\n               this.isLoading=false; \n\n               //on peut lire \n               this.tryToRead=true;\n               \n\n               \n                   \n              }).catch(err =>{                   \n                console.log(\"accueil + connexion modbus échouée  \")  \n                this.isLoading=false;   \n                this.connection_modbus=false;          \n\n              })\n             \n             \n    \n              \n            }).catch(()=>{\n             console.log(\"connexion impossible a l'UPC\")\n            })\n          }else{\n            this.global.onConnectModbus().then( ()=>{ //on tente une connexion modbus pour déterminer si c'est un upc\n              //connexion modbus réussie : c'est un upc\n             console.log(\"accueil + connexion modbus reussie \")\n             this.connection_modbus=true;\n             this.isLoading=false; \n\n\n\n            }).catch(err =>{                   \n              console.log(\"accueil + connexion modbus échouée  \")  \n              this.isLoading=false;  \n              this.connection_modbus=false;           \n\n            })\n          }\n\n          })\n\n    })\n\n  }\n\n\n} \nasync checkConnectionWifi(){\n  let wifi = await WifiWizard2.getConnectedSSID()\n  this.current_ssid=wifi;\n}\n\n\nRead(){\n  this.do= setInterval(()=>{\n\n     console.log(\"======================== cycle ================================\")\n    \n     this.checkConnectionWifi()\n\n     // en cas de perte de connexion \n     if(this.current_ssid != this.stored_ssid && this.check){\n       console.log(\"wifi diff >>>> \")\n       console.log(\"reconnexion  >>>> \")\n\n       //connecter au wifi \n       this.ConnecterUPC()\n     }\n\n   \n\n      if(this.tryToRead){\n       console.log(\"Try to read >\")\n\n        // lecture statique :\n        this.isLoading=true;\n\n        this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"comunicationparam\").then(res=>{   \n        \n         if(res == true){\n           this.isLoading=false;\n           console.log(\">  lecture reussi \")\n           this.subscribeRefresh()\n           this.events.publish(\"loadParameters\")\n           this.global.lectureStatiqueEnCours = false;\n           this.global.displayLoading = false;\n           this.tryToRead=false;\n         }\n         else{ \n                 console.log(\">  lecture echouée  \")\n                 this.isLoading=false;\n                 this.tryToRead=true;\n                 this.global.statutConnexion=\"Aucune\"\n                 this.global.lectureStatiqueEnCours = false;\n                 this.global.displayLoading = false;\n               \n               }      \n       \n       }).catch(err=>{\n         this.tryToRead=true;\n         this.isLoading=false;\n         console.log(\"acceuil::erreur lecture\")\n         console.log(err)\n         \n       })\n\n       //fin de lecture statique :\n\n      }\n\n   },500);\n\n }\n\n\n  doRefresh(event) {\n    this.unsubscribeRefresh()\n    this.global.onReadStatiqueEnable().then(()=>{\n      this.subscribeRefresh()\n    })  \n  }\n\n  int2ip (ipInt) {\n    return ( (ipInt>>>24) +'.' + (ipInt>>16 & 255) +'.' + (ipInt>>8 & 255) +'.' + (ipInt & 255) );\n  }\n\n  //modbus \n\n  onChangeMDMGSM() {\n   \n    this.ecrir(this.correspondancesRegistres.comMdmName,this.modemGSM)     \n  }\n\n  onChangeMDMGSMPass() {\n   this.ecrir(this.correspondancesRegistres.comMdmPass,this.modemGSMpass)      \n  }\n\n  //wifi \n  \n  onChangeSSID() {\n    \n    this.ecrir(this.correspondancesRegistres.comWifiSsid,this.ssid)      \n  }\n\n  onChangeMDP() {\n   this.ecrir(this.correspondancesRegistres.comWifiPass,this.password)    \n  }\n\n  onChangeChannel() {\n   this.ecrir(this.correspondancesRegistres.comWifiApCh,this.channel)\n  }\n  /// url \n\n  onChangeURL() {\n    console.log(\"on change URL \")\n    this.ecrir(this.correspondancesRegistres.comWebSrvUrl,this.url)\n  }\n//APN\n\nonChangeAPNURL() {\n  this.ecrir(this.correspondancesRegistres.comMdmApnId2,this.apn)     \n  }\n  onChangeAPNUS() {\n  this.ecrir(this.correspondancesRegistres.comMdmApnUser,this.apnuser)     \n  }\n\n  onChangeAPNPass() {\n   this.ecrir(this.correspondancesRegistres.comMdmApnPass,this.apnpass)    \n  }\n\n  unsubscribeRefresh(){\n    this.events.unsubscribe(\"loadParameters\")\n  }\n\n  subscribeRefresh(){\n    this.events.subscribe(\"loadParameters\",($event)=>{\n      this.modemGSM = this.global.upcmodbus.communicationParameters.comMdmName;\n      this.modemGSMpass = this.global.upcmodbus.communicationParameters.comGsmPass;\n\n      this.ssid = this.global.upcmodbus.communicationParameters.comGsmName;\n      this.password = this.global.upcmodbus.communicationParameters.comWiFiPass;\n      this.channel = this.global.upcmodbus.communicationParameters.comWifiApCh;\n      this.url = this.global.upcmodbus.communicationParameters.comWebSrvUrl;\n      this.apn = this.global.upcmodbus.communicationParameters.comMdmApnId2;\n      this.apnuser = this.global.upcmodbus.communicationParameters.comMdmApnUser;\n      this.apnpass = this.global.upcmodbus.communicationParameters.comMdmApnPass;\n      this.adIp = this.global.upcmodbus.communicationParameters.comGsmIpAdr;\n\n      \n      \n    })\n        \n  }\n\n  ionViewWillLeave(){\n\n\n    console.log(\"quitter la page  :\")  \n    clearInterval(this.do)\n\n  }\n\n  \n  ecrir(variable, value){\n    if(variable.type==\"int\"){\n    this.isLoading=true;\n    this.global.upcmodbus.client.setIntInHoldingRegister(variable.adr, variable.dim,value).then(()=>{\n\n      console.log(\"accueil ::  ecriture reussie\")\n     \n      // lecture statique :\n       this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"comunicationparam\").then(res=>{   \n   \n    if(res == true){\n      this.isLoading=false;\n      console.log(\"accueil:  lecture reussi \")\n\n      this.subscribeRefresh()\n      this.events.publish(\"loadParameters\")\n      this.global.lectureStatiqueEnCours = false;\n      this.global.displayLoading = false;\n      this.tryToRead=false;\n    }\n    else{ \n              this.isLoading=false;\n           \n              this.global.statutConnexion=\"Aucune\"\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n          \n          }      \n  \n  }).catch(err=>{\n    this.isLoading=false;\n    console.log(\"acceuil::erreur lecture\")\n    console.log(err)\n    \n  })\n\n  //fin de lecture statique :\n\n}).catch(()=>{\n  this.isLoading=false;\n  console.log(\"num piege ::écriture impossible\")\n})\n    }else{\n      this.isLoading=true;\n      this.global.upcmodbus.client.setStringArrayInHoldingResgisters(variable,value).then(()=>{\n  \n        console.log(\"accueil ::  ecriture reussie\")\n       \n        // lecture statique :\n         this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"comunicationparam\").then(res=>{   \n     \n      if(res == true){\n        this.isLoading=false;\n        console.log(\"accueil:  lecture reussi \")\n  \n        this.subscribeRefresh()\n        this.events.publish(\"loadParameters\")\n        this.global.lectureStatiqueEnCours = false;\n        this.global.displayLoading = false;\n        this.tryToRead=false;\n      }\n      else{ \n                this.isLoading=false;\n             \n                this.global.statutConnexion=\"Aucune\"\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n            \n            }      \n    \n    }).catch(err=>{\n      this.isLoading=false;\n      console.log(\"acceuil::erreur lecture\")\n      console.log(err)\n      \n    })\n  \n    //fin de lecture statique :\n  \n  }).catch(()=>{\n    this.isLoading=false;\n    console.log(\"num piege ::écriture impossible\")\n  })\n\n    }\n  }\n\n  //Synchro bouteilles polling synchro URGENT \n  //Différence bouteille présent et ajouter URL serveur\n  //Paramètre de PID et offsets modifiable\n  //Intensté adjust Paramètres actif et non adjust Mode de diffusion sur l'état\n}\n"],"sourceRoot":""}