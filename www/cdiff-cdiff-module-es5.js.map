{"version":3,"sources":["./src/app/cdiff/cdiff.page.html","./src/app/cdiff/cdiff-routing.module.ts","./src/app/cdiff/cdiff.module.ts","./src/app/cdiff/cdiff.page.scss","./src/app/cdiff/cdiff.page.ts"],"names":[],"mappings":"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","file":"cdiff-cdiff-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-buttons>\\n      <ion-button fill=\\\"clear\\\">\\n        <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a :\\n        {{this.current_ssid}}</ion-button\\n      >\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <h3 style=\\\"text-align: center\\\">Débits et pression CO2</h3>\\n  <h4>{{upcStatus}}</h4>\\n  <ion-grid style=\\\"padding-top: 5%\\\">\\n    <ion-row style=\\\"text-align: center\\\">\\n      <ion-col size=\\\"12\\\"\\n        ><ion-button\\n          shape=\\\"round\\\"\\n          expand=\\\"block\\\"\\n          [color]=\\\"diffcolor\\\"\\n          disabled=\\\"true\\\"\\n          >{{typediff}}</ion-button\\n        ></ion-col\\n      >\\n    </ion-row>\\n    <ion-row style=\\\"text-align: center\\\">\\n      <ion-col size=\\\"3\\\"\\n        ><ion-button shape=\\\"round\\\" size=\\\"small\\\" (click)=\\\"onDisableDiff();\\\"\\n          >OFF</ion-button\\n        ></ion-col\\n      >\\n      <ion-col size=\\\"3\\\"\\n        ><ion-button shape=\\\"round\\\" size=\\\"small\\\" (click)=\\\"onEnableDiff();\\\"\\n          >{{textplaydiff}}</ion-button\\n        ></ion-col\\n      >\\n      <ion-col size=\\\"3\\\"\\n        ><ion-button shape=\\\"round\\\" size=\\\"small\\\" (click)=\\\"startstop();\\\"\\n          >{{textdiff}}</ion-button\\n        ></ion-col\\n      >\\n\\n      <ion-col size=\\\"3\\\"\\n        ><ion-button shape=\\\"round\\\" size=\\\"small\\\" (click)=\\\"onCheck();\\\"\\n          >CHECK</ion-button\\n        ></ion-col\\n      >\\n    </ion-row>\\n  </ion-grid>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center\\\">Paramètre</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col> Débit Max </ion-col>\\n          <ion-col>\\n            <input\\n              *ngIf=\\\"!redBackground\\\"\\n              type=\\\"number\\\"\\n              class=\\\"form-control form-control-sm\\\"\\n              step=\\\"0.1\\\"\\n              (click)=\\\"unsubscribeRefresh()\\\"\\n              (change)=\\\"changeFluxMax()\\\"\\n              [(ngModel)]=\\\"fluxmax\\\"\\n            />\\n            <ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col>Intensité</ion-col>\\n          <ion-col>\\n            <input\\n              *ngIf=\\\"!redBackground\\\"\\n              type=\\\"number\\\"\\n              class=\\\"form-control form-control-sm\\\"\\n              (click)=\\\"unsubscribeRefresh()\\\"\\n              (change)=\\\"changeIntensity();\\\"\\n              [(ngModel)]=\\\"intensity\\\"\\n            /><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col>Bouteille active</ion-col>\\n          <ion-col>\\n            <select\\n              *ngIf=\\\"!redBackground\\\"\\n              class=\\\"custom-select custom-select-sm\\\"\\n              (ngModelChange)=\\\"changeResAct($event);\\\"\\n              [(ngModel)]=\\\"resActive\\\"\\n            >\\n              <option value=\\\"0\\\">B0</option>\\n              <option value=\\\"1\\\">B1</option>\\n              <option value=\\\"2\\\">B2</option>\\n            </select>\\n            <ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center\\\">Mesures</ion-card-title>\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\">\\n            <ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{\\\"Intensité : \\\"+ intensity}}</ion-label\\n            >\\n            <ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"6\\\">\\n            <ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{\\\"Température : \\\"+temp.toFixed(2)+\\\" °C\\\"}}</ion-label\\n            >\\n            <ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\"></ion-col>\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label color=\\\"dark\\\" style=\\\"font-weight: bolder\\\">\\n              Réf</ion-label\\n            ></ion-col\\n          >\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label color=\\\"dark\\\" style=\\\"font-weight: bolder\\\"\\n              >Mesure</ion-label\\n            ></ion-col\\n          >\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\"\\n            ><ion-label color=\\\"dark\\\">Débit (nl/min):</ion-label></ion-col\\n          >\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{debiRef.toFixed(3)}}</ion-label\\n            ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n          <ion-col\\n            size=\\\"3\\\"\\n            [ngClass]=\\\"{'bgsuccess':backgroundeb,'bgdanger':!backgroundeb, 'bgwarning':backgrounddangerdeb}\\\"\\n            ><ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{debiMes.toFixed(3)}}</ion-label\\n            ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\"\\n            ><ion-label color=\\\"dark\\\">PE (Bars):</ion-label></ion-col\\n          >\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\"></ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{peMes.toFixed(3)}}</ion-label\\n            ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\"\\n            ><ion-label color=\\\"dark\\\">PS (Bars):</ion-label></ion-col\\n          >\\n          <ion-col size=\\\"3\\\"></ion-col>\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{psMes.toFixed(3)}}</ion-label\\n            ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"6\\\"\\n            ><ion-label color=\\\"dark\\\">PS comp (Bars):</ion-label></ion-col\\n          >\\n          <ion-col size=\\\"3\\\"><ion-label color=\\\"dark\\\"></ion-label></ion-col>\\n          <ion-col size=\\\"3\\\"\\n            ><ion-label *ngIf=\\\"!redBackground\\\" color=\\\"dark\\\"\\n              >{{psCompMes.toFixed(3)}}</ion-label\\n            ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-row>\\n    <ion-col size=\\\"6\\\">\\n      <ion-card>\\n        <ion-card-title style=\\\"text-align: center\\\">Offsets</ion-card-title>\\n        <ion-card-content>\\n          <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n            <ion-col size=\\\"6\\\">PE (bar)</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                type=\\\"tel\\\"\\n                [(ngModel)]=\\\"offsetPE\\\"\\n                (focusout)=\\\"changeoffsetPE();\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">PS (bar)</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                [(ngModel)]=\\\"offsetPS\\\"\\n                type=\\\"tel\\\"\\n                (focusout)=\\\"changeoffsetPS();\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">Debit (nl/min)</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                [(ngModel)]=\\\"offsetdeb\\\"\\n                type=\\\"tel\\\"\\n                (focusout)=\\\"changeoffsetdeb();\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n    <ion-col size=\\\"6\\\">\\n      <ion-card>\\n        <ion-card-title style=\\\"text-align: center\\\">PID</ion-card-title>\\n        <ion-card-content>\\n          <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n            <ion-col size=\\\"6\\\">Prop</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                [(ngModel)]=\\\"pidprog\\\"\\n                type=\\\"tel\\\"\\n                (focusout)=\\\"changePID();\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">INT</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                [(ngModel)]=\\\"pidint\\\"\\n                type=\\\"tel\\\"\\n                (focusout)=\\\"changeINT();\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n            <ion-col size=\\\"6\\\">DER</ion-col>\\n            <ion-col size=\\\"6\\\"\\n              ><ion-input\\n                *ngIf=\\\"!redBackground\\\"\\n                [(ngModel)]=\\\"pider\\\"\\n                type=\\\"tel\\\"\\n                (focusout)=\\\"changeDIR()\\\"\\n              ></ion-input\\n              ><ion-label *ngIf=\\\"redBackground\\\">-</ion-label>\\n            </ion-col>\\n          </ion-row>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-content>\\n<ion-footer>\\n  <ion-button\\n    *ngIf=\\\"!global.displayLoading\\\"\\n    style=\\\"float: left\\\"\\n    fill=\\\"clear\\\"\\n    (click)=\\\"global.onReadStatiqueEnable()\\\"\\n  >\\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\n  </ion-button>\\n  <ion-button\\n    *ngIf=\\\"global.displayLoading\\\"\\n    style=\\\"float: left\\\"\\n    fill=\\\"clear\\\"\\n    color=\\\"primary\\\"\\n  >\\n    <ion-spinner></ion-spinner>\\n  </ion-button>\\n  <ion-button\\n    *ngIf=\\\"display\\\"\\n    style=\\\"float: right\\\"\\n    fill=\\\"clear\\\"\\n    (click)=\\\"goToNextPage()\\\"\\n    >Suivant<ion-icon name=\\\"arrow-forward\\\"></ion-icon\\n  ></ion-button>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CdiffPage } from './cdiff.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CdiffPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CdiffPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CdiffPageRoutingModule } from './cdiff-routing.module';\n\nimport { CdiffPage } from './cdiff.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CdiffPageRoutingModule\n  ],\n  declarations: [CdiffPage]\n})\nexport class CdiffPageModule {}\n","module.exports = \".bgdanger {\\n  background-color: red;\\n}\\n\\n.bgsuccess {\\n  background-color: green;\\n}\\n\\n.bgwarning {\\n  background-color: yellow;\\n}\\n\\nion-input {\\n  border: solid 1px;\\n  text-align: center;\\n}\\n\\n/*.bgred {\\n\\tbackground-color: red;\\n    color : black;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2RpZmYvQzpcXFVzZXJzXFxkZXZlbFxcT25lRHJpdmVcXEJ1cmVhdVxcYi1EZXYvc3JjXFxhcHBcXGNkaWZmXFxjZGlmZi5wYWdlLnNjc3MiLCJzcmMvYXBwL2NkaWZmL2NkaWZmLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHFCQUFBO0FDQ0o7O0FERUE7RUFDSSx1QkFBQTtBQ0NKOztBRENBO0VBQ0ksd0JBQUE7QUNFSjs7QURFQTtFQUNJLGlCQUFBO0VBQ0Esa0JBQUE7QUNDSjs7QURDQzs7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9jZGlmZi9jZGlmZi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYmdkYW5nZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJlZDtcbn1cblxuLmJnc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47XG59XG4uYmd3YXJuaW5nIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XG59XG5cblxuaW9uLWlucHV0e1xuICAgIGJvcmRlcjogc29saWQgMXB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiB9XG4gLyouYmdyZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3IgOiBibGFjaztcbn0qL1xuXG4iLCIuYmdkYW5nZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG59XG5cbi5iZ3N1Y2Nlc3Mge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmVlbjtcbn1cblxuLmJnd2FybmluZyB7XG4gIGJhY2tncm91bmQtY29sb3I6IHllbGxvdztcbn1cblxuaW9uLWlucHV0IHtcbiAgYm9yZGVyOiBzb2xpZCAxcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLyouYmdyZWQge1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4gICAgY29sb3IgOiBibGFjaztcbn0qLyJdfQ== */\"","import {\n  Component,\n  OnInit,\n  NgZone,\n  ChangeDetectorRef,\n  OnDestroy,\n} from \"@angular/core\";\nimport { GlobalService } from \"../api/global.service\";\nimport { Platform, LoadingController, Events } from \"@ionic/angular\";\nimport { UPCModbus } from \"../model/upcv3/upcmodbus\";\nimport { Hotspot } from \"@ionic-native/hotspot/ngx\";\nimport { Network } from \"@ionic-native/network/ngx\";\nimport { UPCV3 } from \"../model/upcv3/upcv3\";\nimport { Router } from \"@angular/router\";\nimport { Storage } from \"@ionic/storage\";\nimport { CorrespondancesRegistres } from \"../model/upcv3/correspondancesRegistres\";\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: \"app-cdiff\",\n  templateUrl: \"./cdiff.page.html\",\n  styleUrls: [\"./cdiff.page.scss\"],\n})\nexport class CdiffPage implements OnInit {\n  do;\n  check = false;\n  current_ssid = \"NO WIFI\";\n  stored_ssid = \"NO WIFI\";\n  password_ssid = \"\";\n  connection_modbus = false;\n  isLoading = false;\n  tryToRead = false;\n  upcStatus = 0;\n  textdiff = \"ADJUST\";\n  colordif = \"light\";\n  textplaydiff = \"DIFF\";\n  colorplayfiff = \"light\";\n  colordis = \"light\";\n  colorcheck = \"light\";\n  offsetPE = 0;\n  offsetPS = 0;\n  offsetdeb = 0;\n  pidprog = 0;\n  pidint = 0;\n  pider = 0;\n  upc: UPCModbus;\n  fluxmax: number = 0;\n  intensity: number = 0;\n  resActive: number = 0;\n  temp: number = 0;\n  debiRef: number = 0;\n  peRef: number = 0;\n  psRef: number = 0;\n  debiMes: number = 0;\n  peMes: number = 0;\n  psMes: number = 0;\n  psComp: number = 0;\n  psCompMes: number = 0;\n  upc3s: UPCV3[];\n  backgroundeb = false;\n  backgrounddangerdeb = false;\n  diffcolor = \"light\";\n  typediff = \"Mode de diffusion\";\n  redBackground = false;\n  display = false;\n  correspondancesRegistres: CorrespondancesRegistres;\n\n  //diffusion à l'arrêt start reload front detectchange\n\n  constructor(\n    private global: GlobalService,\n    private platform: Platform,\n    private loadingCTRL: LoadingController,\n    private ngZone: NgZone,\n    private hotspot: Hotspot,\n    private network: Network,\n    private cd: ChangeDetectorRef,\n    private router: Router,\n    private storage: Storage,\n    private events: Events\n  ) {\n    this.global.checkMode();\n  }\n\n  ngOnInit() {}\n  ionViewWillEnter() {\n    this.tryToRead = true;\n    console.log(\n      \"=========================================================================\"\n    );\n    console.log(\n      \"========================== page  accueil :===============================\"\n    );\n    console.log(\n      \"=========================================================================\"\n    );\n\n    this.global.connexionRequise = \"UPC\";\n\n    console.log(\" - Connexion requise :\" + this.global.connexionRequise);\n    console.log(\n      \" - Connexion  actuel  (avant on read statique) :\" +\n        this.global.statutConnexion\n    );\n\n    this.ConnecterUPC();\n\n    this.Read();\n\n    this.correspondancesRegistres = new CorrespondancesRegistres();\n  }\n\n  ConnecterUPC() {\n    //connection a l 'UPC :\n    console.log(\"> try  connecter a l upc \");\n    if (this.global.mode != \"modeTest\") {\n      this.isLoading = true;\n      this.storage.get(\"ssid_upc\").then(async (stored_ssid) => {\n        this.storage.get(\"password\").then(async (password) => {\n          this.stored_ssid = stored_ssid;\n          this.password_ssid = password;\n\n          //recuperer l ssid  +password\n          console.log(\"acceuil , stored password\" + password);\n          console.log(\"acceuil , stored ssid\" + stored_ssid);\n\n          //si on est deja connecté a l upc :\n          let wifi = await WifiWizard2.getConnectedSSID();\n\n          console.log(\"connected ssid: \" + wifi);\n\n          if (wifi != stored_ssid) {\n            console.log(\"wifi diffrents :>>>>>>>>>\");\n\n            console.log(\"connecte wifi \");\n            WifiWizard2.connect(stored_ssid, password)\n              .then(() => {\n                //connexion reussi a l UPC  :\n                console.log(\"connexion wifi up reussie :\");\n                this.check = true;\n\n                this.global.statutConnexion = \"UPC\";\n                this.global\n                  .onConnectModbus()\n                  .then(async () => {\n                    console.log(\"accueil , connexion modbus reussie >> \");\n                    this.connection_modbus = true;\n                    this.isLoading = false;\n\n                    //on peut lire\n                    this.tryToRead = true;\n                  })\n                  .catch((err) => {\n                    console.log(\"accueil + connexion modbus échouée  \");\n                    this.isLoading = false;\n                    this.connection_modbus = false;\n                  });\n              })\n              .catch((err) => {\n                console.log(\"connexion impossible a l'UPC wifi\");\n                console.log(err);\n              });\n          } else {\n            this.global\n              .onConnectModbus()\n              .then(() => {\n                //on tente une connexion modbus pour déterminer si c'est un upc\n                //connexion modbus réussie : c'est un upc\n                console.log(\"accueil + connexion modbus reussie \");\n                this.connection_modbus = true;\n                this.isLoading = false;\n              })\n              .catch((err) => {\n                console.log(\"accueil + connexion modbus échouée  \");\n                this.isLoading = false;\n                this.connection_modbus = false;\n              });\n          }\n        });\n      });\n    }\n  }\n\n  async checkConnectionWifi() {\n    console.log(\"check wifi conx\");\n    let wifi = await WifiWizard2.getConnectedSSID();\n    console.log(wifi);\n    this.current_ssid = wifi;\n  }\n\n  Read() {\n    this.do = setInterval(async () => {\n      console.log(\n        \"======================== cycle ================================\"\n      );\n\n      this.checkConnectionWifi();\n\n      // en cas de perte de connexion\n      if (this.current_ssid != this.stored_ssid) {\n        console.log(\"wifi diff >>>> \");\n        console.log(\"disconnect \");\n        let res = await WifiWizard2.disconnect(this.current_ssid)\n          .then((result) => {\n            console.log(\"connect \");\n            this.ConnecterUPC();\n          })\n          .catch((err) => {});\n        console.log(res);\n        //connecter au wifi\n        console.log(\"reconnexion  >>>> \");\n      }\n\n      if (this.tryToRead && this.global.upcmodbus.state == 1) {\n        console.log(\"Try to read >\");\n\n        // lecture statique :\n        this.isLoading = true;\n\n        this.global.upcmodbus\n          .onReadStatique(this.global.upcname, this.global.mode, \"cdiff\")\n          .then((res) => {\n            if (res == true) {\n              this.tryToRead = false;\n              this.isLoading = false;\n              console.log(\">  lecture reussi \");\n              this.subscribeRefresh();\n              this.events.publish(\"loadParameters\");\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              this.tryToRead = false;\n            } else {\n              console.log(\">  lecture echouée  \");\n              this.isLoading = false;\n              this.tryToRead = true;\n              this.global.statutConnexion = \"Aucune\";\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n            }\n          })\n          .catch((err) => {\n            this.tryToRead = true;\n            this.isLoading = false;\n            console.log(\"acceuil::erreur lecture\");\n            console.log(err);\n          });\n\n        //fin de lecture statique :\n      }\n\n      if (this.global.upcmodbus.state == 1) {\n        console.log(\"Try to read >\");\n\n        // lecture statique :\n        this.isLoading = true;\n\n        this.global.upcmodbus\n          .onReadStatique(\n            this.global.upcname,\n            this.global.mode,\n            \"cdiff-cyclique\"\n          )\n          .then((res) => {\n            if (res == true) {\n              //this.tryToRead = false;\n              this.isLoading = false;\n              console.log(\">  lecture reussi \");\n              this.subscribeRefreshCyclique();\n              this.events.publish(\"loadParameters\");\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              // this.tryToRead = false;\n            } else {\n              console.log(\">  lecture echouée  \");\n              this.isLoading = false;\n              // this.tryToRead = true;\n              this.global.statutConnexion = \"Aucune\";\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n            }\n          })\n          .catch((err) => {\n            // this.tryToRead = true;\n            this.isLoading = false;\n            console.log(\"acceuil::erreur lecture\");\n            console.log(err);\n          });\n\n        //fin de lecture statique :\n      }\n    }, 500);\n  }\n\n  ecrir(variable, value) {\n    console.log(\n      \" 1-apres ecriture this alarme  basse global  avant e criture:\" +\n        this.global.upcmodbus.alarm.alrResLowEn\n    );\n\n    if (variable.type == \"int\") {\n      this.isLoading = true;\n      this.global.upcmodbus.client\n        .setIntInHoldingRegister(variable.adr, variable.dim, value)\n        .then(() => {\n          console.log(\"accueil ::  ecriture reussie\");\n\n          // lecture statique :\n          this.global.upcmodbus\n            .onReadStatique(this.global.upcname, this.global.mode, \"cdiff\")\n            .then((res) => {\n              if (res == true) {\n                this.isLoading = false;\n                console.log(\"accueil:  lecture reussi \");\n                this.subscribeRefresh();\n                this.events.publish(\"loadParameters\");\n                console.log(\n                  \" 2 -apres ecriture this alarme  basse global :\" +\n                    this.global.upcmodbus.alarm.alrResLowEn\n                );\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n                this.tryToRead = false;\n              } else {\n                this.isLoading = false;\n                this.global.statutConnexion = \"Aucune\";\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(\"acceuil::erreur lecture\");\n              console.log(err);\n            });\n\n          //fin de lecture statique :\n        })\n        .catch(() => {\n          this.isLoading = false;\n          console.log(\"num piege ::écriture impossible\");\n        });\n    } else if (variable.type == \"float\") {\n      console.log(\":::::::::::::::::ecrir un flottant :::::::::::::\");\n      this.isLoading = true;\n\n      this.global.upcmodbus.client\n        .setFloatInHoldingRegister(variable.adr, value)\n        .then(() => {\n          // lecture statique :\n          this.global.upcmodbus\n            .onReadStatique(this.global.upcname, this.global.mode, \"cdiff\")\n            .then((res) => {\n              if (res == true) {\n                this.isLoading = false;\n                console.log(\"accueil:  lecture reussi \");\n                this.subscribeRefresh();\n                this.events.publish(\"loadParameters\");\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n                this.tryToRead = false;\n              } else {\n                this.isLoading = false;\n                this.global.statutConnexion = \"Aucune\";\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(\"acceuil::erreur lecture\");\n              console.log(err);\n            });\n        })\n        .catch(() => {\n          alert(\"écriture impossible\");\n          this.isLoading = false;\n        });\n    } else {\n      this.isLoading = true;\n      this.global.upcmodbus.client\n        .setStringArrayInHoldingResgisters(variable.adr, value)\n        .then(() => {\n          console.log(\"accueil ::  ecriture reussie\");\n\n          // lecture statique :\n          this.global.upcmodbus\n            .onReadStatique(this.global.upcname, this.global.mode, \"cdiff\")\n            .then((res) => {\n              if (res == true) {\n                this.isLoading = false;\n                console.log(\"accueil:  lecture reussi \");\n\n                this.subscribeRefresh();\n                this.events.publish(\"loadParameters\");\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n                this.tryToRead = false;\n              } else {\n                this.isLoading = false;\n\n                this.global.statutConnexion = \"Aucune\";\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n              }\n            })\n            .catch((err) => {\n              this.isLoading = false;\n              console.log(\"acceuil::erreur lecture\");\n              console.log(err);\n            });\n\n          //fin de lecture statique :\n        })\n        .catch(() => {\n          this.isLoading = false;\n          console.log(\"num piege ::écriture impossible\");\n        });\n    }\n  }\n\n  startstop() {\n    this.onChangeDiff();\n  }\n  doRefresh(event) {\n    this.unsubscribeRefresh();\n    this.global.onReadStatiqueEnable().then(() => {\n      this.subscribeRefresh();\n    });\n  }\n\n  onChangeDiff() {\n    this.ecrir(this.correspondancesRegistres.upcMode, 2);\n  }\n\n  onDisableDiff() {\n    this.ecrir(this.correspondancesRegistres.upcMode, 0);\n  }\n\n  onEnableDiff() {\n    this.ecrir(this.correspondancesRegistres.upcMode, 1);\n  }\n\n  onCheck() {\n    this.ecrir(this.correspondancesRegistres.upcMode, 3);\n  }\n\n  changeIntensity() {\n    this.ecrir(this.correspondancesRegistres.upcDiffLvlAdj, this.intensity);\n  }\n\n  changeFluxMax() {\n    console.log(\"flux max : \", this.fluxmax);\n    this.ecrir(this.correspondancesRegistres.co2FlowRefAdj, this.fluxmax);\n  }\n\n  changeResAct() {\n    this.resActive = this.resActive == 1 ? 2 : 1;\n\n    this.ecrir(this.correspondancesRegistres.co2ResActAdj, this.resActive);\n  }\n\n  changePID() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change PID\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.upcCo2PidProp,\n      this.pidprog\n    );\n  }\n\n  changeINT() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change INT\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.upcCo2PidInteg,\n      this.pidint\n    );\n  }\n\n  changeDIR() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change DIR\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.upcCo2PidDiff,\n      this.pider\n    );\n  }\n\n  changeoffsetPE() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change offsetPE\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.co2PressInpOffs,\n      this.offsetPE\n    );\n  }\n\n  changeoffsetPS() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change offsetPS\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.co2PressoutOffs,\n      this.offsetPS\n    );\n  }\n\n  changeoffsetdeb() {\n    var d = new Date();\n    this.global.logs.push(\n      this.global.msToTime(d.getTime()) + \" - appel on change offsetdeb\"\n    );\n    this.global.onWriteEnable(\n      this.correspondancesRegistres.co2FlowOffs,\n      this.offsetdeb\n    );\n  }\n\n  goToNextPage() {\n    this.storage.get(\"nexturl\").then((res) => {\n      this.router.navigate([res]);\n    });\n  }\n  ionViewWillLeave() {\n    console.log(\"quitter la page  :\");\n    clearInterval(this.do);\n  }\n\n  subscribeRefresh() {\n    this.events.subscribe(\"loadParameters\", ($event) => {\n      var status = this.global.upcmodbus.general.upcStatus;\n      this.upcStatus = this.global.upcmodbus.general.upcStatus;\n      if (status == 0) {\n        this.colordis = \"danger\";\n        this.colorcheck = \"light\";\n        this.colorplayfiff = \"light\";\n        this.colordif = \"light\";\n        this.typediff = \"Diffusion OFF\";\n        this.diffcolor = \"danger\";\n      } else if (status == 3) {\n        this.colorcheck = \"primary\";\n        this.colordis = \"light\";\n        this.colorplayfiff = \"light\";\n        this.colordif = \"light\";\n        this.typediff = \"Mode CHECK Pressions\";\n        this.diffcolor = \"warning\";\n      } else if (status == 2) {\n        this.colordif = \"primary\";\n        this.colorplayfiff = \"light\";\n        this.colordis = \"light\";\n        this.colorcheck = \"light\";\n        this.diffcolor = \"tertiary\";\n        this.typediff = \"Mode ADJUST\";\n      } else {\n        this.colorplayfiff = \"primary\";\n        this.colordif = \"light\";\n        this.colorcheck = \"light\";\n        this.colordis = \"light\";\n        this.typediff = \"Diff. programmée ACTIF\";\n        this.diffcolor = \"primary\";\n      }\n      this.offsetPE = this.global.upcmodbus.diffusions.co2PressInpOffs;\n      this.offsetPS = this.global.upcmodbus.diffusions.co2PressOutOffs;\n      this.offsetdeb = this.global.upcmodbus.diffusions.co2FlowOffs;\n      this.pidprog = this.global.upcmodbus.general.upcCo2PidProp;\n      this.pidint = this.global.upcmodbus.general.upcCo2PidInteg;\n      this.pider = this.global.upcmodbus.general.upcCo2PidDiff;\n\n      //40018\n\n      this.fluxmax = this.global.upcmodbus.general.co2FlowRefAdj;\n\n      //40065\n      this.intensity = this.global.upcmodbus.diffusions.upcDiffLvlAdj;\n\n      //40150\n      this.resActive = this.global.upcmodbus.reserves.co2ResActAdj;\n\n      this.debiRef = (this.fluxmax * this.intensity) / 10;\n      //this.global.interval = setInterval(async ()=>{\n\n      //40416\n      //this.intensity = this.upc.client.registerToUint32(res[0]);\n      //40435\n      this.peMes = this.global.upcmodbus.diffusions.co2PresInpAvg;\n\n      //40437\n      this.psMes = this.global.upcmodbus.diffusions.co2PresOutAvg;\n\n      //40439\n      this.debiMes = this.global.upcmodbus.diffusions.co2FlowAvg;\n      if (Math.abs(((this.debiMes - this.debiRef) / this.debiRef) * 100) < 5) {\n        this.backgroundeb = true;\n        this.backgrounddangerdeb = false;\n      } else if (\n        Math.abs(((this.debiMes - this.debiRef) / this.debiRef) * 100) < 10\n      ) {\n        this.backgrounddangerdeb = true;\n      } else {\n        this.backgroundeb = false;\n        this.backgrounddangerdeb = false;\n      }\n\n      //40451\n      this.temp = this.global.upcmodbus.diffusions.co2TempAvg;\n\n      //40463\n      this.psCompMes = this.global.upcmodbus.diffusions.co2PressOutComp;\n    });\n  }\n\n  subscribeRefreshCyclique() {\n    this.events.subscribe(\"loadParameters\", ($event) => {\n      console.log(\"subscribe refresh cyclique\");\n      //this.intensity = this.upc.client.registerToUint32(res[0]);\n      //40435\n      this.peMes = this.global.upcmodbus.diffusions.co2PresInpAvg;\n\n      //40437\n      this.psMes = this.global.upcmodbus.diffusions.co2PresOutAvg;\n\n      //40439\n      this.debiMes = this.global.upcmodbus.diffusions.co2FlowAvg;\n\n      if (Math.abs(((this.debiMes - this.debiRef) / this.debiRef) * 100) < 5) {\n        this.backgroundeb = true;\n        this.backgrounddangerdeb = false;\n      } else if (\n        Math.abs(((this.debiMes - this.debiRef) / this.debiRef) * 100) < 10\n      ) {\n        this.backgrounddangerdeb = true;\n      } else {\n        this.backgroundeb = false;\n        this.backgrounddangerdeb = false;\n      }\n\n      //40451\n      this.temp = this.global.upcmodbus.diffusions.co2TempAvg;\n\n      //40463\n      this.psCompMes = this.global.upcmodbus.diffusions.co2PressOutComp;\n    });\n  }\n\n  unsubscribeRefresh() {\n    this.events.unsubscribe(\"loadParameters\");\n  }\n}\n"],"sourceRoot":""}