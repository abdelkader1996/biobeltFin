{"version":3,"sources":["./src/app/connection/connection.page.html","./src/app/connection/connection-routing.module.ts","./src/app/connection/connection.module.ts","./src/app/connection/connection.page.scss","./src/app/connection/connection.page.ts"],"names":[],"mappings":"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","file":"connection-connection-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-buttons>\\n      <ion-button fill=\\\"clear\\\">\\n        <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a :\\n        {{this.current_ssid}}</ion-button\\n      >\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" id=\\\"refresher\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <h3 style=\\\"text-align: center\\\">Etat de la connexion au réseau</h3>\\n\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center\\\"\\n        >Etat Instantané</ion-card-title\\n      >\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"8\\\">Mode</ion-col>\\n          <ion-col size=\\\"4\\\" *ngIf=\\\"!redBackground\\\">{{mode}}</ion-col>\\n          <ion-col size=\\\"4\\\" *ngIf=\\\"redBackground\\\">-</ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"2\\\">Niv.</ion-col>\\n          <ion-col size=\\\"6\\\"\\n            ><ion-range\\n              style=\\\"pointer-events: none\\\"\\n              color=\\\"danger\\\"\\n              [value]=\\\"level\\\"\\n              max=\\\"100\\\"\\n            ></ion-range\\n          ></ion-col>\\n          <ion-col size=\\\"4\\\" *ngIf=\\\"level < 500 && !redBackground\\\"\\n            >{{level}}</ion-col\\n          ><ion-col *ngIf=\\\"redBackground\\\" size=\\\"4\\\">-</ion-col>\\n          <ion-col size=\\\"4\\\" *ngIf=\\\"level >= 500 && !redBackground\\\"\\n            >Non Connecté</ion-col\\n          ><ion-col *ngIf=\\\"redBackground\\\" size=\\\"4\\\">-</ion-col>\\n        </ion-row>\\n        <!--<ion-row>\\n          <ion-col size=\\\"10\\\">BER</ion-col>\\n          <ion-col size=\\\"2\\\">{{ber}}</ion-col>\\n        </ion-row> -->\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n  <ion-card>\\n    <ion-card-header>\\n      <ion-card-title style=\\\"text-align: center\\\"\\n        >Statistiques dernière 24 h</ion-card-title\\n      >\\n    </ion-card-header>\\n    <ion-card-content>\\n      <ion-grid>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"2\\\">Mode</ion-col>\\n          <ion-col size=\\\"2\\\">-</ion-col>\\n          <ion-col size=\\\"2\\\">2G</ion-col>\\n          <ion-col size=\\\"2\\\">3G</ion-col>\\n          <ion-col size=\\\"2\\\">4G</ion-col>\\n        </ion-row>\\n\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"2\\\">Durée</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRatioTimeOffline+\\\" %\\\"}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRatioTimeIn2G+\\\" %\\\"}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRatioTimeIn3G+\\\" %\\\"}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRatioTimeIn4G+\\\" %\\\"}}</ion-col>\\n        </ion-row>\\n\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"2\\\">Niveau</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmQualMoyen2GGPRS}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmQualMoyen2GEDGE}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmQualMoyen3G}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmQualMoyen4G}}</ion-col>\\n        </ion-row>\\n        <ion-row [ngClass]=\\\"{'bgred' : redBackground}\\\">\\n          <ion-col size=\\\"2\\\">BER</ion-col>\\n          <ion-col size=\\\"2\\\">-</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRssiMoyen2G}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRssiMoyen3G}}</ion-col>\\n          <ion-col size=\\\"2\\\">{{xComMdmRssiMoyen4G}}</ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\\n<ion-footer>\\n  <ion-button\\n    *ngIf=\\\"display\\\"\\n    style=\\\"float: right\\\"\\n    fill=\\\"clear\\\"\\n    (click)=\\\"goToNextPage()\\\"\\n    >Suivant<ion-icon name=\\\"arrow-forward\\\"></ion-icon\\n  ></ion-button>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ConnectionPage } from './connection.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ConnectionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ConnectionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ConnectionPageRoutingModule } from './connection-routing.module';\n\nimport { ConnectionPage } from './connection.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConnectionPageRoutingModule\n  ],\n  declarations: [ConnectionPage]\n})\nexport class ConnectionPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Nvbm5lY3Rpb24vY29ubmVjdGlvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, NgZone, ChangeDetectorRef } from \"@angular/core\";\nimport { Platform, LoadingController, Events } from \"@ionic/angular\";\nimport { Hotspot, HotspotNetwork } from \"@ionic-native/hotspot/ngx\";\nimport { UPCModbus } from \"../model/upcv3/upcmodbus\";\nimport { GlobalService } from \"../api/global.service\";\nimport { Router } from \"@angular/router\";\nimport { Storage } from \"@ionic/storage\";\nimport { CorrespondancesRegistres } from \"../model/upcv3/correspondancesRegistres\";\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: \"app-connection\",\n  templateUrl: \"./connection.page.html\",\n  styleUrls: [\"./connection.page.scss\"],\n})\nexport class ConnectionPage {\n  do;\n  check = false;\n  current_ssid = \"NO WIFI\";\n  stored_ssid = \"NO WIFI\";\n  password_ssid = \"\";\n  connection_modbus = false;\n  isLoading = false;\n  tryToRead = false;\n\n  correspondancesRegistres: CorrespondancesRegistres;\n\n  upc: UPCModbus;\n  mode = \"\";\n  level = 0;\n  ber = 0;\n  bertab = [];\n  fw = 0;\n  levelTab = [];\n  dureTab = [];\n  redBackground = false;\n  display = false;\n\n  xComMdmRssiMoyen2G: number = 0;\n  xComMdmRssiMoyen3G: number = 0;\n  xComMdmRssiMoyen4G: number = 0;\n\n  xComMdmQualMoyen2GGPRS: number = 0;\n  xComMdmQualMoyen2GEDGE: number = 0;\n  xComMdmQualMoyen3G: number = 0;\n  xComMdmQualMoyen4G: number = 0;\n\n  xComMdmRatioTimeIn2G: number = 0;\n  xComMdmRatioTimeIn3G: number = 0;\n  xComMdmRatioTimeIn4G: number = 0;\n  xComMdmRatioTimeOffline: number = 0;\n\n  constructor(\n    private platform: Platform,\n    private global: GlobalService,\n    private loadingCTRL: LoadingController,\n    private hotspot: Hotspot,\n    private ngZone: NgZone,\n    private cd: ChangeDetectorRef,\n    private router: Router,\n    private storage: Storage,\n    private events: Events\n  ) {\n    this.global.checkMode();\n  }\n\n  ionViewWillEnter() {\n    this.tryToRead = true;\n\n    this.global.connexionRequise = \"UPC\";\n\n    console.log(\" - Connexion requise :\" + this.global.connexionRequise);\n    console.log(\n      \" - Connexion  actuel  (avant on read statique) :\" +\n        this.global.statutConnexion\n    );\n\n    this.ConnecterUPC();\n\n    this.Read();\n\n    this.correspondancesRegistres = new CorrespondancesRegistres();\n  }\n  async checkConnectionWifi() {\n    console.log(\"check wifi conx\");\n    let wifi = await WifiWizard2.getConnectedSSID();\n    console.log(wifi);\n    this.current_ssid = wifi;\n  }\n\n  Read() {\n    this.do = setInterval(async () => {\n      console.log(\n        \"======================== cycle ================================\"\n      );\n\n      this.checkConnectionWifi();\n\n      // en cas de perte de connexion\n      if (this.current_ssid != this.stored_ssid) {\n        console.log(\"wifi diff >>>> \");\n        console.log(\"disconnect \");\n        let res = await WifiWizard2.disconnect(this.current_ssid)\n          .then((result) => {\n            console.log(\"connect \");\n            this.ConnecterUPC();\n          })\n          .catch((err) => {});\n        console.log(res);\n        //connecter au wifi\n        console.log(\"reconnexion  >>>> \");\n      } else if (this.global.upcmodbus.state != 1) {\n        this.ConnecterUPC();\n      }\n\n      if (this.global.upcmodbus.state == 1) {\n        console.log(\"Try to read >\");\n\n        // lecture statique :\n        this.isLoading = true;\n\n        this.global.upcmodbus\n          .onReadStatique(this.global.upcname, this.global.mode, \"connection\")\n          .then((res) => {\n            if (res == true) {\n              this.tryToRead = false;\n              this.isLoading = false;\n              console.log(\">  lecture reussi \");\n              this.subscribeRefresh();\n              this.events.publish(\"loadParameters\");\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n              // this.tryToRead = false;\n            } else {\n              console.log(\">  lecture echouée  \");\n              this.isLoading = false;\n              this.tryToRead = true;\n              this.global.statutConnexion = \"Aucune\";\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n            }\n          })\n          .catch((err) => {\n            this.tryToRead = true;\n            this.isLoading = false;\n            console.log(\"acceuil::erreur lecture\");\n            console.log(err);\n          });\n\n        //fin de lecture statique :\n      }\n    }, 500);\n  }\n\n  subscribeRefresh() {\n    var d = new Date();\n    this.events.subscribe(\"loadParameters\", ($event) => {\n      this.level = this.global.upcmodbus.connectionLevel;\n      this.mode = this.getMode(this.global.upcmodbus.connectionMode);\n\n      this.xComMdmRssiMoyen2G = this.global.upcmodbus.xComMdmRssiMoyen2G;\n      this.xComMdmRssiMoyen3G = this.global.upcmodbus.xComMdmRssiMoyen3G;\n      this.xComMdmRssiMoyen4G = this.global.upcmodbus.xComMdmRssiMoyen4G;\n\n      this.xComMdmQualMoyen2GGPRS =\n        this.global.upcmodbus.xComMdmQualMoyen2GGPRS;\n      this.xComMdmQualMoyen2GEDGE =\n        this.global.upcmodbus.xComMdmQualMoyen2GEDGE;\n      this.xComMdmQualMoyen3G = this.global.upcmodbus.xComMdmQualMoyen3G;\n      this.xComMdmQualMoyen4G = this.global.upcmodbus.xComMdmQualMoyen4G;\n\n      this.xComMdmRatioTimeIn2G = this.global.upcmodbus.xComMdmRatioTimeIn2G;\n      this.xComMdmRatioTimeIn3G = this.global.upcmodbus.xComMdmRatioTimeIn3G;\n      this.xComMdmRatioTimeIn4G = this.global.upcmodbus.xComMdmRatioTimeIn4G;\n      this.xComMdmRatioTimeOffline =\n        this.global.upcmodbus.xComMdmRatioTimeOffline;\n    });\n  }\n\n  ConnecterUPC() {\n    //connection a l 'UPC :\n    console.log(\"> try  connecter a l upc \");\n    if (this.global.mode != \"modeTest\") {\n      this.isLoading = true;\n      this.storage.get(\"ssid_upc\").then(async (stored_ssid) => {\n        this.storage.get(\"password\").then(async (password) => {\n          this.stored_ssid = stored_ssid;\n          this.password_ssid = password;\n\n          //recuperer l ssid  +password\n          console.log(\"acceuil , stored password\" + password);\n          console.log(\"acceuil , stored ssid\" + stored_ssid);\n\n          //si on est deja connecté a l upc :\n          let wifi = await WifiWizard2.getConnectedSSID();\n\n          console.log(\"connected ssid: \" + wifi);\n\n          if (wifi != stored_ssid) {\n            console.log(\"wifi diffrents :>>>>>>>>>\");\n\n            console.log(\"connecte wifi \");\n            WifiWizard2.connect(stored_ssid, password)\n              .then(() => {\n                //connexion reussi a l UPC  :\n                console.log(\"connexion wifi up reussie :\");\n                this.check = true;\n\n                this.global.statutConnexion = \"UPC\";\n                this.global\n                  .onConnectModbus()\n                  .then(async () => {\n                    console.log(\"accueil , connexion modbus reussie >> \");\n                    this.connection_modbus = true;\n                    this.isLoading = false;\n\n                    //on peut lire\n                    this.tryToRead = true;\n                  })\n                  .catch((err) => {\n                    console.log(\"accueil + connexion modbus échouée  \");\n                    this.isLoading = false;\n                    this.connection_modbus = false;\n                  });\n              })\n              .catch((err) => {\n                console.log(\"connexion impossible a l'UPC wifi\");\n                console.log(err);\n              });\n          } else {\n            this.global\n              .onConnectModbus()\n              .then(() => {\n                //on tente une connexion modbus pour déterminer si c'est un upc\n                //connexion modbus réussie : c'est un upc\n                console.log(\"accueil + connexion modbus reussie \");\n                this.connection_modbus = true;\n                this.isLoading = false;\n              })\n              .catch((err) => {\n                console.log(\"accueil + connexion modbus échouée  \");\n                this.isLoading = false;\n                this.connection_modbus = false;\n              });\n          }\n        });\n      });\n    }\n  }\n\n  getMode(mode: number): string {\n    switch (mode) {\n      case 0:\n        return \"Non enregistré\";\n        break;\n      case 1:\n        return \"2G GPRS\";\n        break;\n      case 2:\n        return \"2G EDGE\";\n        break;\n      case 3:\n        return \"3G WCDMA\";\n        break;\n      case 4:\n        return \"3G HSDPA\";\n        break;\n      case 5:\n        return \"3G HSUPA\";\n        break;\n      case 6:\n        return \"3G HSDPA/HSUPA\";\n        break;\n      case 7:\n        return \"4G\";\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  doRefresh(event) {\n    this.ionViewWillEnter();\n    event.target.complete();\n  }\n\n  goToNextPage() {\n    clearInterval(this.global.interval);\n\n    this.storage.get(\"nexturl\").then((res) => {\n      this.router.navigate([res]);\n    });\n  }\n}\n"],"sourceRoot":""}