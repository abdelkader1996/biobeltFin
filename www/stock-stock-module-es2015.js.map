{"version":3,"sources":["./src/app/stock/stock.page.html","./src/app/stock/stock-routing.module.ts","./src/app/stock/stock.module.ts","./src/app/stock/stock.page.scss","./src/app/stock/stock.page.ts"],"names":[],"mappings":"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","file":"stock-stock-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{name.name}}</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\" *ngIf=\\\"!global.isBBAM\\\">\\r\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"globe\\\" color=\\\"light\\\"></ion-icon>ADMIN</ion-button> \\r\\n     </ion-buttons>\\r\\n     <ion-buttons slot=\\\"end\\\" *ngIf=\\\"global.isBBAM\\\">\\r\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon>{{global.ssid}}</ion-button> \\r\\n     </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n  \\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label>Stock : </ion-label>\\r\\n      <ion-label >{{this.stockName}}</ion-label>\\r\\n  </ion-item>\\r\\n\\r\\n  \\r\\n  \\r\\n      <ion-button *ngIf=\\\"retfourn\\\" expand=\\\"block\\\"  color=\\\"secondary\\\" (click)=\\\"scanRack();\\\">\\r\\n        Scanner un Rack \\r\\n        <ion-icon ios=\\\"ios-camera\\\" md=\\\"md-camera\\\"></ion-icon>\\r\\n\\r\\n      </ion-button>\\r\\n\\r\\n\\r\\n  <ion-item *ngIf=\\\"addStock\\\">\\r\\n    <ion-label>Rack : </ion-label>\\r\\n      <ion-label *ngIf=\\\"selectedRack==='null'\\\" (click)=\\\"selectRack();\\\">Rack non selectioné</ion-label>\\r\\n      <ion-label *ngIf=\\\"!(selectedRack==='null')\\\" (click)=\\\"selectRack();\\\" >{{selectedRack}}</ion-label>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item *ngIf=\\\"addStock\\\">\\r\\n    <ion-label>type de bouteille </ion-label>\\r\\n    <ion-select placeholder=\\\"Selectionner un type \\\" [(ngModel)]=\\\"currentBotlleType\\\" >\\r\\n      <ion-select-option  *ngFor=\\\"let bt of bottleTypedb\\\" value=\\\"{{bt.id}}\\\">{{bt.brand+\\\"-\\\"+bt.designation+\\\" kg\\\"}}</ion-select-option>\\r\\n     </ion-select>\\r\\n  </ion-item>\\r\\n\\r\\n  <ion-item>\\r\\n    <ion-label color=\\\"primary\\\">boutteilles scannées : </ion-label>\\r\\n  </ion-item>\\r\\n  <ion-item *ngIf=\\\"bottleBarcodes.length==0 \\\">\\r\\n    <ion-label>aucune   </ion-label>\\r\\n  </ion-item>\\r\\n  \\r\\n  <div *ngIf=\\\"!retbouteille\\\">\\r\\n    <ion-item *ngFor=\\\"let barcode of bottleBarcodes; let indexOfelement=index;\\\" >\\r\\n      <ion-label>{{barcode}} </ion-label>\\r\\n      <ion-label>  <ion-icon name=\\\"trash\\\" color=\\\"danger\\\" (click)=\\\"removeElementFromBarcodes(indexOfelement)\\\"></ion-icon>\\r\\n      </ion-label>\\r\\n  \\r\\n    </ion-item>\\r\\n  </div>\\r\\n\\r\\n  \\r\\n  <div *ngIf=\\\"retbouteille && botteilleRet\\\">\\r\\n     <ion-item>\\r\\n      <ion-label>bouteille :  </ion-label>\\r\\n     </ion-item>\\r\\n     <ion-item (click)=\\\"showRadio()\\\">\\r\\n      <ion-label>codebar : {{botteilleRet.barcode}}</ion-label><ion-label> | {{botteilleRet.state}} |</ion-label>\\r\\n     </ion-item>\\r\\n\\r\\n    <ion-item *ngIf=\\\"retNotExistBottle\\\">\\r\\n      <ion-list>\\r\\n        <ion-list-header>\\r\\n          <ion-label>ajouter une bouteille  :</ion-label>\\r\\n        </ion-list-header>\\r\\n        <ion-item >\\r\\n          <ion-label>type de bouteille </ion-label>\\r\\n          <ion-select placeholder=\\\"Selectionner un type \\\" [(ngModel)]=\\\"botteilleRet.bottleType\\\" >\\r\\n            <ion-select-option  *ngFor=\\\"let bt of bottleTypedb\\\" value=\\\"{{bt.id}}\\\">{{bt.brand+\\\"-\\\"+bt.designation+\\\" kg\\\"}}</ion-select-option>\\r\\n           </ion-select>\\r\\n        </ion-item>\\r\\n\\r\\n      </ion-list>\\r\\n    </ion-item>\\r\\n     <ion-item *ngIf=\\\"showRadioTF\\\">\\r\\n      <ion-list>\\r\\n        <ion-radio-group [value]=\\\"botteilleRet.state\\\" (ionChange)=\\\"radioGroupChange($event)\\\">\\r\\n          <ion-list-header>\\r\\n            <ion-label>etat : </ion-label>\\r\\n          </ion-list-header>\\r\\n      \\r\\n          <ion-item>\\r\\n            <ion-label>EMPTY</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"EMPTY\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n      \\r\\n          <ion-item>\\r\\n            <ion-label>IN_USE</ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"IN_USE\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n      \\r\\n          <ion-item>\\r\\n            <ion-label>FULL </ion-label>\\r\\n            <ion-radio slot=\\\"start\\\" value=\\\"FULL\\\"></ion-radio>\\r\\n          </ion-item>\\r\\n        </ion-radio-group>\\r\\n      </ion-list>    \\r\\n     </ion-item>\\r\\n\\r\\n     \\r\\n     \\r\\n      \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  <ion-list>\\r\\n\\r\\n    <ion-item *ngFor=\\\"let s of stock\\\"> \\r\\n      <ion-label>{{s.bottleString+\\\"Rack:\\\"+s.rack}}</ion-label>\\r\\n      <ion-badge color=\\\"success\\\" *ngIf=\\\"s.state === 'FULL'\\\">Plein</ion-badge>\\r\\n      <ion-badge color=\\\"secondary\\\" *ngIf=\\\"s.state === 'IN_USE'\\\">Entamée</ion-badge>\\r\\n      <ion-badge color=\\\"danger\\\" *ngIf=\\\"s.state === 'EMPTY'\\\">Vide</ion-badge>\\r\\n    </ion-item>\\r\\n    \\r\\n  </ion-list>\\r\\n\\r\\n\\r\\n   \\r\\n  <ion-list>\\r\\n    <ion-list-header>Historique :</ion-list-header>\\r\\n    \\r\\n    <ion-item *ngFor=\\\"let log of logs\\\"> \\r\\n      <ion-label>{{log}}</ion-label>\\r\\n    </ion-item>\\r\\n    \\r\\n  </ion-list>\\r\\n</ion-content>\\r\\n\\r\\n<ion-footer>\\r\\n  <ion-button  [attr.disabled]=\\\"!currentBotlleType && addStock\\\" *ngIf=\\\"addStock || retbouteille || retfourn\\\" expand=\\\"block\\\" (click)=\\\"scanBottle();\\\" color=\\\"secondary\\\" >\\r\\n    Scanner une bouteille \\r\\n    <ion-icon ios=\\\"ios-camera\\\" md=\\\"md-camera\\\"></ion-icon>\\r\\n\\r\\n </ion-button>\\r\\n\\r\\n  <ion-button  [attr.disabled]=\\\"bottleBarcodes.length==0 && addStock \\\" *ngIf=\\\"addStock\\\" expand=\\\"block\\\" (click)=\\\"addBottle();\\\">\\r\\n    enregistrer \\r\\n  </ion-button>\\r\\n  <ion-button *ngIf=\\\"retStock\\\" expand=\\\"block\\\" (click)=\\\"retBottles();\\\">\\r\\n    Retour au dépôt\\r\\n  </ion-button>\\r\\n\\r\\n  <ion-button *ngIf=\\\"retbouteille\\\" expand=\\\"block\\\" (click)=\\\"retraitdebouteille();\\\">\\r\\n    {{retourStock?\\\"retour au stock\\\":\\\"retrait de bouteille\\\" }}\\r\\n  </ion-button>\\r\\n  <ion-button *ngIf=\\\"retfourn\\\" color=\\\"danger\\\" expand=\\\"block\\\" (click)=\\\"delBottle();\\\">\\r\\n    Retour au fournisseur \\r\\n</ion-button>\\r\\n<ion-button *ngIf=\\\"retStock\\\" expand=\\\"block\\\" (click)=\\\"retRack();\\\">\\r\\n  Sélectionner un Rack\\r\\n</ion-button>\\r\\n\\r\\n</ion-footer>\\r\\n\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { StockPage } from './stock.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: StockPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StockPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { StockPageRoutingModule } from './stock-routing.module';\n\nimport { StockPage } from './stock.page';\nimport { AddbottlemodalPage } from '../addbottlemodal/addbottlemodal.page';\n\n\n\n\n@NgModule({\n  imports: [\n    \n    CommonModule,\n    FormsModule,\n    IonicModule,\n    StockPageRoutingModule,\n    \n  ],\n  entryComponents : [\n    //AddbottlemodalPage,\n  ],\n  declarations: [StockPage,\n   // AddbottlemodalPage,\n  ]\n})\nexport class StockPageModule {}\n","module.exports = \"ion-icon {\\n  padding-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3RvY2svQzpcXFVzZXJzXFxkZXZlbFxcT25lRHJpdmVcXEJ1cmVhdVxcYi1EZXYvc3JjXFxhcHBcXHN0b2NrXFxzdG9jay5wYWdlLnNjc3MiLCJzcmMvYXBwL3N0b2NrL3N0b2NrLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGlCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9zdG9jay9zdG9jay5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taWNvbntcclxuICAgIHBhZGRpbmctbGVmdDogNXB4O1xyXG59IiwiaW9uLWljb24ge1xuICBwYWRkaW5nLWxlZnQ6IDVweDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport {Storage} from \"@ionic/storage\";\r\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\r\nimport { Upcv3serviceService } from '../api/upcv3service.service';\r\nimport { State } from '../model/site';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { AddbottlemodalPage } from '../addbottlemodal/addbottlemodal.page';\r\nimport { RackcontentPage } from '../rackcontent/rackcontent.page';\r\nimport { GlobalService } from '../api/global.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { Code } from '../api/ApiResponse';\r\nimport { element } from 'protractor';\r\nimport { Branch } from '../model/project/branch';\r\n\r\n@Component({\r\n  selector: 'app-stock',\r\n  templateUrl: './stock.page.html',\r\n  styleUrls: ['./stock.page.scss'],\r\n})\r\nexport class StockPage implements OnInit {        \r\n  logs=[];  \r\n  stock;\r\n  stockName=\"\"\r\n  token;\r\n  addStock = false;\r\n  remStock = false;\r\n  retStock = false;\r\n  retfourn=false;\r\n  retbouteille=false;\r\n  showRadioTF=false;\r\n  retNotExistBottle=false;\r\n  name = {name : \"\",id : 0};\r\n  header = [];\r\n  //rack selectionnée pour ajouter des bouteilles \r\n  selectedRack=\"null\";\r\n  //botteles types  from  database :\r\n  bottleTypedb=[]\r\n\r\n  //botlles barcode :\r\n  bottleBarcodes=[]\r\n  bottleTypeIDs=[]\r\n  bottlesTypeName=[]\r\n  currentBotlleType=null;\r\n\r\n  //bouteille a retirer \r\n   botteilleRet=undefined;\r\n\r\n   retourStock=false;\r\n\r\n  \r\n  constructor(private storage : Storage,private barcode : BarcodeScanner,private upcv3Service : Upcv3serviceService,private modalService : ModalController,private global : GlobalService, private alertController : AlertController) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get(\"stockid\").then(val=>{\r\n      this.stock = JSON.parse(val);\r\n      this.stockName=this.stock.name;\r\n    })\r\n\r\n    \r\n    if(localStorage.getItem(\"adds\") == \"0\"){\r\n        this.addStock = true;\r\n    }// 30 € livraison LS MCB 2,5 € 120 unité MCB triphasé 6 A MCCB\r\n    else if (localStorage.getItem(\"adds\") == \"1\"){\r\n      this.retbouteille = true;\r\n    } else if (localStorage.getItem(\"adds\") == \"2\") {\r\n      this.retStock = true;\r\n    }\r\n    else if (localStorage.getItem(\"adds\") == \"3\") {\r\n      this.retfourn = true;\r\n    }\r\n\r\n      else if (localStorage.getItem(\"adds\") == \"4\") {\r\n        this.retbouteille = true;\r\n        this.retourStock=true;\r\n\r\n      }\r\n\r\n    this.storage.get(\"token\").then(val=>{\r\n      this.token = val;\r\n\r\n      //recuperer les types de bouteilles de la base de données :\r\n      this.upcv3Service.getAllBottleTypes(val).subscribe(res=>{\r\n        if(res.code === Code.BOTTLE_TYPE_RECOVERED){\r\n            this.bottleTypedb = res.result;\r\n            console.log(\"bottle types\")\r\n            console.log(this.bottleTypedb)\r\n        }\r\n      });\r\n      \r\n    /*  this.storage.get(\"stockid\").then(val=>{\r\n        this.name = JSON.parse(val);\r\n        \r\n        this.upcv3Service.getBottlesByStockId(this.name.id,this.token).subscribe(res=>{\r\n          this.stock = res.result;\r\n\r\n          this.stock.sort((a,b)=>{\r\n            if (a.rack < b.rack) return -1;\r\n            if (a.rack > b.rack) return 1;\r\n            return 0;\r\n          });\r\n          \r\n          this.stock.forEach(item=>{\r\n            if(!this.header.includes(item.rack)){\r\n              this.header.push(item.rack);\r\n            }\r\n          })\r\n\r\n        })\r\n       \r\n    })*/\r\n\r\n    })\r\n\r\n  \r\n    console.log(\"debug ::::::\")\r\n    console.log(this.retourStock);\r\n  }\r\n  remRack() {\r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != ''){\r\n        \r\n        var text = res.text;\r\n        this.upcv3Service.getBottleFromRack(this.token,res.text).subscribe(async res=>{\r\n          if(res.result.length> 0){\r\n            var modal = await this.modalService.create({\r\n              component : RackcontentPage,\r\n              componentProps : {\r\n                rack : text\r\n              }\r\n            })\r\n            modal.present();\r\n          } else {\r\n            alert(\"Aucune bouteille est associée à ce Rack !\");\r\n          }\r\n        })\r\n        \r\n        \r\n      }\r\n      \r\n    })\r\n  }\r\n  addRack() {\r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != \"\"){\r\n        var text = res.text;\r\n        this.upcv3Service.getBottleFromRack(this.token,res.text).subscribe(async res=>{\r\n            if(res.result.length == 0){\r\n              this.presentAlertRack(text);\r\n            }else {\r\n              localStorage.setItem(\"rack\",text);\r\n              const modal = await this.modalService.create({\r\n                component : AddbottlemodalPage,\r\n                componentProps : {\r\n                  barcode : \"\",\r\n                  stockRet : this.name,\r\n                  mode : 1\r\n                }\r\n              })\r\n              modal.present();\r\n            }\r\n        })\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n\r\n// scanner un rack \r\n  selectRack() {\r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != \"\"){\r\n        var text = res.text;\r\n        this.selectedRack=text;\r\n        localStorage.setItem(\"rack\",text);\r\n        \r\n      }\r\n    })\r\n  }\r\n//scanner un rack et charger les bouteilles associées \r\n  scanRack(){    \r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != \"\"){\r\n        var text = res.text;\r\n        this.selectedRack=text;\r\n        localStorage.setItem(\"rack\",text);\r\n        this.upcv3Service.getBottleFromRack(this.token,text).subscribe(async res=>{\r\n          res.result.map(element=>this.bottleBarcodes.push(element.barcode))\r\n        })\r\n        \r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  //scanner une bouteille:\r\n  scanBottle() {\r\n   \r\n\r\n\r\n    let barecode=\"\";\r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != \"\"){\r\n        var text = res.text;\r\n        this.bottleBarcodes.push(text) \r\n        this.bottleTypeIDs.push(this.currentBotlleType)  \r\n        barecode=res.text;\r\n        \r\n           //si on est en mode retrait de bouteille  :\r\n    if (this.retbouteille){\r\n\r\n       await this.upcv3Service.getBottleByBarCode(res.text,this.token).subscribe(res=>{\r\n\r\n        if(res.code===Code.BOTTLE_RECOVERED){\r\n\r\n          //si la bouteille est presente dans la base de donnée \r\n          var bottle=res.result;\r\n          bottle.bottleType=res.result.bottleType.id;\r\n        \r\n\r\n          this.botteilleRet = {\r\n      \r\n          barcode:barecode,\r\n          bottleType:res.result.bottleType,\r\n          state:res.result.state,\r\n          stock:\"hjh\",\r\n          rack:res.result.rack,\r\n          localisationId:this.retourStock?this.stock.id:\"00000000-0000-0000-0000-000000000000\",\r\n          status: this.retourStock?\"ENTREPOSE\":\"TRANSIT\",\r\n          localisationType: this.retourStock?\"STOCK\":\"TRANSIT\"\r\n        \r\n      }\r\n\r\n\r\n        }else{\r\n        // si elle n existe pas , on demande de la creer :\r\n        alert(\"la bouteille scannée n existe pas dans la base de donnée  \")\r\n        this.retNotExistBottle=true;\r\n        this.botteilleRet = {\r\n          barcode:barecode,\r\n          bottleType:\"\",\r\n          state:\"FULL\",\r\n          stock:\"hjh\",\r\n          rack:\"null\",\r\n          localisationId:this.retourStock?this.stock.id:\"00000000-0000-0000-0000-000000000000\",\r\n          status: this.retourStock?\"ENTREPOSE\":\"TRANSIT\",\r\n          localisationType: this.retourStock?\"STOCK\":\"TRANSIT\"\r\n        \r\n      }\r\n\r\n        }\r\n      \r\n      })\r\n  \r\n\r\n    }\r\n      }\r\n    })\r\n \r\n\r\n  }\r\n\r\n  radioGroupChange(event) {\r\n    console.log(\"radioGroupChange\",event.detail.value);\r\n    this.botteilleRet.state = event.detail.value;\r\n    }\r\n\r\n    showRadio(){\r\n      this.showRadioTF=!this.showRadioTF;\r\n    }\r\n\r\n  removeElementFromBarcodes(indexOfelement){\r\n\r\n    this.bottleBarcodes.splice(indexOfelement, 1);\r\n  }\r\n\r\n   //retrait de boutielle :\r\n   retraitdebouteille(){\r\n   \r\n          // mettre a jour la bouteille  dans la base de données :\r\n      this.upcv3Service.addBottleMobile(JSON.stringify(this.botteilleRet),this.token).subscribe(res=>{\r\n        alert(this.retourStock?\"retour au stock !\":\"retrait de bouteille !\");\r\n        this.logs.push(this.retourStock?\"( retour au stock  )\":\"( retrait de bouteille )\"+\" - \"+this.botteilleRet.barcode+\" | \"+res.result.bottleType.brand+\" \"+res.result.bottleType.designation)\r\n        this.showRadioTF=false;\r\n        this.retNotExistBottle=false;\r\n      \r\n      })\r\n\r\n      \r\n  }\r\n\r\n\r\n\r\n\r\n  async presentAlertRack(text) {\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'my-custom-class',\r\n      header: 'Nouveau Rack',\r\n      subHeader: '',\r\n      message: 'Vous avez ajouter un nouveau rack ?',\r\n      buttons: [{text : 'Annuler', handler : ()=>{}},{text:'Confirmer',\r\n                  handler : async ()=>{\r\n                    localStorage.setItem(\"rack\",text);\r\n              const modal = await this.modalService.create({\r\n                component : AddbottlemodalPage,\r\n                componentProps : {\r\n                  barcode : \"\",\r\n                  stockRet : this.name,\r\n                  mode : 1\r\n                }\r\n              })\r\n              modal.present();\r\n                  }\r\n    }],\r\n      \r\n    });\r\n\r\n    await alert.present();\r\n  }\r\n\r\n  retRack() {\r\n    this.barcode.scan().then(async res=>{\r\n      if(res.text != \"\"){\r\n        localStorage.setItem(\"rack\",res.text);\r\n        var modal = await this.modalService.create({\r\n          component : AddbottlemodalPage,\r\n          componentProps : {\r\n            barcode : \"\",\r\n            stockRet : this.name,\r\n            mode : 2\r\n          }\r\n        })\r\n        modal.present();\r\n      }\r\n    })\r\n  }\r\n  async delBottle() {\r\n    \r\n    var bottleList = {\r\n     \r\n      barcodes : this.bottleBarcodes,\r\n     \r\n    }\r\n    console.log(JSON.stringify(bottleList))\r\n    \r\n    this.upcv3Service.returnFourn(JSON.stringify(bottleList),this.token).subscribe(res=>{\r\n      this.bottleBarcodes=[]\r\n    })\r\n    \r\n\r\n  }\r\n\r\n\r\n  async addBottle() {\r\n    /*\r\n    var bottleList = {\r\n      bottleType : this.bottleTypeIDs,\r\n      stock : this.stock.id,\r\n      //date : date,\r\n      barcodes : this.bottleBarcodes,\r\n      rack : this.selectedRack,\r\n      empty : 0\r\n    }\r\n\r\n    this.upcv3Service.addToStockMob(JSON.stringify(bottleList),this.token).subscribe(res=>{\r\n      this.bottleBarcodes=[]\r\n    })\r\n    */\r\n\r\n    var bottleToAdd=[...this.bottleBarcodes];\r\n    this.bottleBarcodes=[];\r\n\r\n    bottleToAdd.map((item,index)=>{\r\n          var bottle = {\r\n      \r\n            barcode:item,\r\n            bottleType:this.bottleTypeIDs[index],\r\n            state:\"FULL\",\r\n            stock : this.stock.id,\r\n            localisationId: this.stock.id,\r\n            rack : this.selectedRack,\r\n            status:\"ENTREPOSE\",\r\n            localisationType:\"STOCK\"\r\n          \r\n        }\r\n             \r\n         // mettre a jour la bouteille  dans la base de données :\r\n          this.upcv3Service.addBottleMobile(JSON.stringify(bottle),this.token).subscribe(res=>alert(\"bouteille ajoutée !\"))\r\n\r\n    })\r\n    \r\n\r\n  }\r\n\r\n\r\n  async retBottles() {\r\n    this.barcode.scan().then(async code=>{\r\n      if(code.text != ''){\r\n        localStorage.setItem(\"rack\",null);\r\n        var modal = await this.modalService.create({\r\n          component : AddbottlemodalPage,\r\n          componentProps : {\r\n            barcode : code.text,\r\n            stockRet : this.name,\r\n            mode : 2\r\n          }\r\n        })\r\n        modal.present();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}