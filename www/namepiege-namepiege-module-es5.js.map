{"version":3,"sources":["./src/app/namepiege/namepiege.page.html","./src/app/namepiege/namepiege-routing.module.ts","./src/app/namepiege/namepiege.module.ts","./src/app/namepiege/namepiege.page.scss","./src/app/namepiege/namepiege.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,mWAAmW,mBAAmB,yRAAyR,2SAA2S,sRAAsR,4GAA4G,MAAM,mWAAmW,SAAS,iGAAiG,YAAY,sGAAsG,uDAAuD,oFAAoF,sVAAsV,wG;;;;;;;;;;;;;;;;;;;ACAzzE;AACc;AAEN;AAEjD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,6DAAa;KACzB;CACF,CAAC;AAMF;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QAJtC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBE;AACM;AACF;AAEA;AAE2B;AAEvB;AAWjD;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAT/B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,oFAA0B;aAC3B;YACD,YAAY,EAAE,CAAC,6DAAa,CAAC;SAC9B,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH;;;;;;;;;;;;ACnBhC,6BAA6B,4BAA4B,uBAAuB,iBAAiB,GAAG,aAAa,iBAAiB,GAAG,cAAc,0BAA0B,oBAAoB,GAAG,+CAA+C,+7B;;;;;;;;;;;;;;;;;;;;;ACAtK;AACvB;AAEb;AAG0B;AACgB;AAUnF;IAsBE,0BAA0B;IAC1B,uBAAoB,MAAsB,EACtB,OAAiB,EACjB,MAAe;QAFf,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAU;QACjB,WAAM,GAAN,MAAM,CAAS;QAvBnC,UAAK,GAAC,KAAK,CAAC;QACZ,iBAAY,GAAC,SAAS;QACtB,gBAAW,GAAC,SAAS,CAAC;QACtB,kBAAa,GAAC,EAAE,CAAC;QACjB,sBAAiB,GAAC,KAAK,CAAC;QACxB,cAAS,GAAC,KAAK,CAAC;QAChB,cAAS,GAAC,KAAK,CAAC;QAChB,SAAI,GAAY,EAAE,CAAC;QACnB,YAAO,GAAY,CAAC,CAAC;QAErB,SAAI,GAAY,EAAE,CAAC;QAMnB,SAAI,GAAY,EAAE,CAAC;QACnB,kBAAa,GAAG,KAAK,CAAC;QACtB,WAAM,GAAG,CAAC,CAAC;QAMI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;IAAC,CAAC;IAEhC,wCAAgB,GAAhB;QAEA,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,2EAA2E,CAAC;QACxF,OAAO,CAAC,GAAG,CAAC,2EAA2E,CAAC;QACxF,OAAO,CAAC,GAAG,CAAC,2EAA2E,CAAC;QAExF,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,KAAK;QAEpC,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAE,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC;QACnE,OAAO,CAAC,GAAG,CAAC,kDAAkD,GAAE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAE3F,IAAI,CAAC,YAAY,EAAE,CAAC;QAEpB,IAAI,CAAC,IAAI,EAAE;QAGZ,IAAI,CAAC,wBAAwB,GAAG,IAAI,8FAAwB,EAAE;QAE5D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ;IAG/D,CAAC;IAIF,oCAAY,GAAZ;QAAA,iBA8EC;QA7EQ,uBAAuB;QACvB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;QACxC,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,UAAU,EAAC;YAEhC,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAM,WAAW;;;oBAC7C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAM,QAAQ;;;;;;oCAChD,IAAI,CAAC,WAAW,GAAC,WAAW,CAAC;oCAC7B,IAAI,CAAC,aAAa,GAAC,QAAQ,CAAC;oCAE1B,8BAA8B;oCAC9B,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAE,QAAQ,CAAC,CAAC;oCACnD,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAE,WAAW,CAAC,CAAC;oCAGvC,qBAAM,WAAW,CAAC,gBAAgB,EAAE;;oCAA3C,IAAI,GAAG,SAAoC;oCAE/C,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAC,IAAI,CAAC;oCAEpC,IAAG,IAAI,IAAI,WAAW,EAAC;wCACvB,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC;wCAE/B,WAAW,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC;4CAC9C,6BAA6B;4CAC7B,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC;4CAC1C,KAAI,CAAC,KAAK,GAAC,IAAI,CAAC;4CAEhB,KAAI,CAAC,MAAM,CAAC,eAAe,GAAC,KAAK;4CACjC,KAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC;;oDAElC,OAAO,CAAC,GAAG,CAAC,wCAAwC,CAAC;oDACrD,IAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;oDAC5B,IAAI,CAAC,SAAS,GAAC,KAAK,CAAC;oDAErB,eAAe;oDACf,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;;;iDAKpB,CAAC,CAAC,KAAK,CAAC,aAAG;gDACV,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;gDACnD,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gDACrB,KAAI,CAAC,iBAAiB,GAAC,KAAK,CAAC;4CAE/B,CAAC,CAAC;wCAKJ,CAAC,CAAC,CAAC,KAAK,CAAC;4CACR,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;wCAC5C,CAAC,CAAC;qCACH;yCAAI;wCACH,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,IAAI,CAAE;4CAClC,yCAAyC;4CAC1C,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC;4CAClD,KAAI,CAAC,iBAAiB,GAAC,IAAI,CAAC;4CAC5B,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wCAItB,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;4CACV,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC;4CACnD,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;4CACrB,KAAI,CAAC,iBAAiB,GAAC,KAAK,CAAC;wCAE/B,CAAC,CAAC;qCACH;;;;yBAEA,CAAC;;;iBAEP,CAAC;SAEH;IAGV,CAAC;IAKD,4BAAI,GAAJ;QAAA,iBA2DE;QA1DA,IAAI,CAAC,EAAE,GAAE,WAAW,CAAC;YAElB,OAAO,CAAC,GAAG,CAAC,iEAAiE,CAAC;YAE9E,KAAI,CAAC,mBAAmB,EAAE;YAE1B,gCAAgC;YAChC,IAAG,KAAI,CAAC,YAAY,IAAI,KAAI,CAAC,WAAW,IAAI,KAAI,CAAC,KAAK,EAAC;gBACrD,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;gBAEjC,oBAAoB;gBACpB,KAAI,CAAC,YAAY,EAAE;aACpB;YAIA,IAAG,KAAI,CAAC,SAAS,EAAC;gBACjB,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;gBAE3B,qBAAqB;gBACrB,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;gBAEpB,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,aAAG;oBAEhG,IAAG,GAAG,IAAI,IAAI,EAAC;wBACb,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;wBACjC,KAAI,CAAC,gBAAgB,EAAE;wBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC;wBACrC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;wBACnC,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;qBACtB;yBACG;wBACI,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC;wBACnC,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBACrB,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;wBACpB,KAAI,CAAC,MAAM,CAAC,eAAe,GAAC,QAAQ;wBACpC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;qBAEpC;gBAET,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;oBACV,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;oBACpB,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAElB,CAAC,CAAC;gBAEF,2BAA2B;aAE3B;QAEJ,CAAC,EAAC,GAAG,CAAC,CAAC;IAET,CAAC;IAED,gCAAQ,GAAR;IAEA,CAAC;IAGK,2CAAmB,GAAzB;;;;;4BACa,qBAAM,WAAW,CAAC,gBAAgB,EAAE;;wBAA3C,IAAI,GAAG,SAAoC;wBAC/C,IAAI,CAAC,YAAY,GAAC,IAAI,CAAC;;;;;KACxB;IAGD,iCAAS,GAAT,UAAU,KAAK;QACb,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IAE5B,CAAC;IAGC,+BAAO,GAAP,UAAQ,CAAC;QAEP,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjD,CAAC;IAID,oCAAY,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,SAAS,EAAC,IAAI,CAAC,IAAI,CAAC;IAC/D,CAAC;IACD,sCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,UAAU,EAAC,IAAI,CAAC,OAAO,CAAC;IACnE,CAAC;IAED,6BAAK,GAAL,UAAM,QAAQ,EAAE,KAAK;QAArB,iBAqFC;QApFC,IAAG,QAAQ,CAAC,IAAI,IAAE,KAAK,EAAC;YACxB,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,uBAAuB,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC;gBAE1F,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;gBAE3C,qBAAqB;gBACpB,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,aAAG;oBAEpG,IAAG,GAAG,IAAI,IAAI,EAAC;wBACb,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;wBAExC,KAAI,CAAC,gBAAgB,EAAE;wBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC;wBACrC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;wBACnC,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;qBACtB;yBACG;wBACM,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBAErB,KAAI,CAAC,MAAM,CAAC,eAAe,GAAC,QAAQ;wBACpC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;qBAEtC;gBAET,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;oBACV,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAElB,CAAC,CAAC;gBAEF,2BAA2B;YAE7B,CAAC,CAAC,CAAC,KAAK,CAAC;gBACP,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;YAChD,CAAC,CAAC;SACG;aAAI;YACH,IAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,iCAAiC,CAAC,QAAQ,CAAC,GAAG,EAAC,KAAK,CAAC,CAAC,IAAI,CAAC;gBAEtF,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC;gBAE3C,qBAAqB;gBACpB,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,EAAE,KAAI,CAAC,MAAM,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC,IAAI,CAAC,aAAG;oBAEpG,IAAG,GAAG,IAAI,IAAI,EAAC;wBACb,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC;wBAExC,KAAI,CAAC,gBAAgB,EAAE;wBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gBAAgB,CAAC;wBACrC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;wBACnC,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;qBACtB;yBACG;wBACM,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;wBAErB,KAAI,CAAC,MAAM,CAAC,eAAe,GAAC,QAAQ;wBACpC,KAAI,CAAC,MAAM,CAAC,sBAAsB,GAAG,KAAK,CAAC;wBAC3C,KAAI,CAAC,MAAM,CAAC,cAAc,GAAG,KAAK,CAAC;qBAEtC;gBAET,CAAC,CAAC,CAAC,KAAK,CAAC,aAAG;oBACV,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC;oBACtC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;gBAElB,CAAC,CAAC;gBAEF,2BAA2B;YAE7B,CAAC,CAAC,CAAC,KAAK,CAAC;gBACP,KAAI,CAAC,SAAS,GAAC,KAAK,CAAC;gBACrB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC;YAChD,CAAC,CAAC;SAEC;IACH,CAAC;IACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAiDG;IACH,sCAAc,GAAd;QACE,IAAI,CAAC,GAAC,IAAI,IAAI,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAC,2BAA2B,CAAC;QACpF,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,wBAAwB,CAAC,WAAW,EAAC,IAAI,CAAC,OAAO,CAAC;IAEnF,CAAC;IAED,0CAAkB,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,gBAAgB,CAAC;IAC3C,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBAqBC;QApBC,IAAI,CAAC,GAAC,IAAI,IAAI,EAAE;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,GAAC,cAAc,CAAC;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,EAAC,UAAC,MAAM;YAE5C,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YACzC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAG/B,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC;YAExD,KAAI,CAAC,IAAI,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAC;YAEpD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC;YAEzD,KAAI,CAAC,IAAI,GAAG,EAAE,GAAE,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;YAGrD,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC1D,CAAC,CAAC;IAEJ,CAAC;IAED,wCAAgB,GAAhB;QAGE,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;QACjC,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC;IAExB,CAAC;;gBAlY4B,iEAAa;gBACZ,sDAAO;gBACR,qDAAM;;IAzBxB,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mJAAoC;;SAErC,CAAC;+EAwB6B,iEAAa;YACZ,sDAAO;YACR,qDAAM;OAzBxB,aAAa,CA2ZzB;IAAD,oBAAC;CAAA;AA3ZyB","file":"namepiege-namepiege-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-back-button defaultHref=\\\"home\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n     <ion-buttons>\\n      <ion-button fill=\\\"clear\\\"> <ion-icon name=\\\"wifi\\\" color=\\\"light\\\"></ion-icon> connecté a : {{this.current_ssid}}</ion-button> \\n     </ion-buttons>\\n  </ion-toolbar>\\n  </ion-header>\\n\\n<ion-content>\\n  <ion-refresher slot=\\\"fixed\\\" id=\\\"refresher\\\" (ionRefresh)=\\\"doRefresh($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <h3 style=\\\"text-align: center;\\\">Paramètres Généraux UPC</h3>\\n  <ion-card>\\n    <ion-card-content>\\n      <ion-row><ion-col size=\\\"6\\\">Nom de l'UPC</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"name\\\" enterkeyhint=\\\"enter\\\" placeholder=\\\"Nom de l'UPC...\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeName();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Nombre de pièges</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"nbpiege\\\" enterkeyhint=\\\"enter\\\" placeholder=\\\"Nombre de pièges...\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangePieges();\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">UUID</ion-col><ion-col size=\\\"6\\\">{{uuid}}</ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Fuseau Horaire (h)</ion-col><ion-col size=\\\"6\\\"><ion-input [(ngModel)]=\\\"fusehor\\\" enterkeyhint=\\\"enter\\\" type=\\\"number\\\" (ionFocus)=\\\"unsubscribeRefresh()\\\" (focusout)=\\\"onChangeFusHor()\\\"></ion-input></ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Horloge</ion-col><ion-col size=\\\"6\\\">{{horloge}}</ion-col></ion-row>\\n      <ion-row><ion-col size=\\\"6\\\">Firmware</ion-col><ion-col size=\\\"6\\\">{{\\\"v\\\"+firm}}</ion-col></ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n\\n  <div style=\\\"text-align: center;\\\">\\n  <ion-button color=\\\"danger\\\" (click)=\\\"onWipe();\\\">\\n    WIPE\\n  </ion-button>\\n  <ion-button color=\\\"warning\\\" (click)=\\\"onReset();\\\">RESET</ion-button>\\n</div>\\n</ion-content>\\n<ion-footer style=\\\"display: inline-block\\\">\\n  <ion-button *ngIf=\\\"!this.isLoading\\\" style=\\\"float: left\\\" fill=\\\"clear\\\" (click)=\\\"this.ionViewWillEnter()\\\">    \\n    <ion-icon name=\\\"refresh\\\"></ion-icon>\\n    hhhh\\n  </ion-button>\\n  <ion-button *ngIf=\\\"this.isLoading\\\" style=\\\"float: left;\\\" fill=\\\"clear\\\" color=\\\"primary\\\">\\n    <ion-spinner></ion-spinner>\\n  </ion-button>\\n</ion-footer>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NamepiegePage } from './namepiege.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NamepiegePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NamepiegePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NamepiegePageRoutingModule } from './namepiege-routing.module';\n\nimport { NamepiegePage } from './namepiege.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NamepiegePageRoutingModule\n  ],\n  declarations: [NamepiegePage]\n})\nexport class NamepiegePageModule {}\n","module.exports = \"ion-input {\\n  border: solid 1px black;\\n  text-align: center;\\n  color: black;\\n}\\n\\nion-col {\\n  color: black;\\n}\\n\\n/*.bgred {\\n\\tbackground-color: red;\\n    color : black;\\n}*/\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmFtZXBpZWdlL0M6XFxVc2Vyc1xcZGV2ZWxcXE9uZURyaXZlXFxCdXJlYXVcXGItRGV2L3NyY1xcYXBwXFxuYW1lcGllZ2VcXG5hbWVwaWVnZS5wYWdlLnNjc3MiLCJzcmMvYXBwL25hbWVwaWVnZS9uYW1lcGllZ2UucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksdUJBQUE7RUFDQSxrQkFBQTtFQUNBLFlBQUE7QUNDSjs7QURDQTtFQUNJLFlBQUE7QUNFSjs7QURDQTs7O0VBQUEiLCJmaWxlIjoic3JjL2FwcC9uYW1lcGllZ2UvbmFtZXBpZWdlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1pbnB1dHtcbiAgICBib3JkZXI6IHNvbGlkIDFweCBibGFjaztcbiAgICB0ZXh0LWFsaWduIDpjZW50ZXI7XG4gICAgY29sb3IgOiBibGFjaztcbiB9XG5pb24tY29sIHtcbiAgICBjb2xvcjogYmxhY2s7XG59XG5cbi8qLmJncmVkIHtcblx0YmFja2dyb3VuZC1jb2xvcjogcmVkO1xuICAgIGNvbG9yIDogYmxhY2s7XG59Ki9cblxuIiwiaW9uLWlucHV0IHtcbiAgYm9yZGVyOiBzb2xpZCAxcHggYmxhY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG5pb24tY29sIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4vKi5iZ3JlZCB7XG5cdGJhY2tncm91bmQtY29sb3I6IHJlZDtcbiAgICBjb2xvciA6IGJsYWNrO1xufSovIl19 */\"","import { Component, NgZone, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { GlobalService } from '../api/global.service';\nimport { UPCModbus } from 'src/app/model/upcv3/upcmodbus';\nimport { Storage } from '@ionic/storage';\nimport {  Router } from '@angular/router';\n\nimport { AlertController, Events, Platform } from '@ionic/angular';\nimport { CorrespondancesRegistres } from '../model/upcv3/correspondancesRegistres';\n\n\ndeclare var WifiWizard2: any;\n\n@Component({\n  selector: 'app-namepiege',\n  templateUrl: './namepiege.page.html',\n  styleUrls: ['./namepiege.page.scss'],\n})\nexport class NamepiegePage {\n  do;\n  check=false;\n  current_ssid=\"NO WIFI\"\n  stored_ssid=\"NO WIFI\";\n  password_ssid=\"\";\n  connection_modbus=false;\n  isLoading=false;\n  tryToRead=false;\n  name : string = \"\";\n  nbpiege : number = 0;\n  upc : UPCModbus;\n  uuid : string = \"\";\n  fusehor : number;\n  horloge : string;\n  aube : string;\n  crep : string;\n  langue : string;\n  firm : string = \"\";\n  redBackground = false;\n  length = 0;\n  correspondancesRegistres: CorrespondancesRegistres;\n  // Pièges sauvegardes plan\n  constructor(private global : GlobalService,\n              private storage : Storage, \n              private events : Events\n              ) {this.global.checkMode() }\n\n          ionViewWillEnter(){\n\n          this.tryToRead=true;\n          console.log(\"=========================================================================\") \n          console.log(\"========================== page  accueil :===============================\") \n          console.log(\"=========================================================================\") \n\n          this.global.connexionRequise = \"UPC\"\n\n          console.log(\" - Connexion requise :\"+ this.global.connexionRequise)\n          console.log(\" - Connexion  actuel  (avant on read statique) :\"+ this.global.statutConnexion)\n\n           this.ConnecterUPC();\n\n           this.Read()\n\n          \n          this.correspondancesRegistres = new CorrespondancesRegistres()\n\n            this.horloge = this.global.upcmodbus.general.upcClock\n                         \n         \n  }\n\n\n\n ConnecterUPC(){\n          //connection a l 'UPC :\n          console.log(\"> try  connecter a l upc \")\n          if(this.global.mode != \"modeTest\"){\n\n            this.isLoading=true;\n            this.storage.get(\"ssid_upc\").then(async stored_ssid=>{\n                  this.storage.get(\"password\").then(async password=>{\n                  this.stored_ssid=stored_ssid;\n                  this.password_ssid=password;\n\n                    //recuperer l ssid  +password \n                    console.log(\"acceuil , stored password\" +password);\n                    console.log(\"acceuil , stored ssid\" +stored_ssid);\n\n                    //si on est deja connecté a l upc :\n                    let wifi = await WifiWizard2.getConnectedSSID()\n\n                    console.log(\"connected ssid: \"+wifi)\n\n                    if(wifi != stored_ssid){\n                    console.log(\"wifi diffrents :\")\n\n                    WifiWizard2.connect(stored_ssid, password).then(()=>{\n                      //connexion reussi a l UPC  :\n                      console.log(\"connexion wifi up reussie :\")\n                      this.check=true;\n\n                      this.global.statutConnexion=\"UPC\"\n                      this.global.onConnectModbus().then(async ()=>{ \n\n                       console.log(\"accueil , connexion modbus reussie >> \")\n                       this.connection_modbus=true;\n                       this.isLoading=false; \n\n                       //on peut lire \n                       this.tryToRead=true;\n                       \n\n                       \n                           \n                      }).catch(err =>{                   \n                        console.log(\"accueil + connexion modbus échouée  \")  \n                        this.isLoading=false;   \n                        this.connection_modbus=false;          \n  \n                      })\n                     \n                     \n            \n                      \n                    }).catch(()=>{\n                     console.log(\"connexion impossible a l'UPC\")\n                    })\n                  }else{\n                    this.global.onConnectModbus().then( ()=>{ //on tente une connexion modbus pour déterminer si c'est un upc\n                      //connexion modbus réussie : c'est un upc\n                     console.log(\"accueil + connexion modbus reussie \")\n                     this.connection_modbus=true;\n                     this.isLoading=false; \n\n\n    \n                    }).catch(err =>{                   \n                      console.log(\"accueil + connexion modbus échouée  \")  \n                      this.isLoading=false;  \n                      this.connection_modbus=false;           \n\n                    })\n                  }\n   \n                  })\n      \n            })\n      \n          }\n        \n\n } \n\n\n\n\n Read(){\n   this.do= setInterval(()=>{\n\n      console.log(\"======================== cycle ================================\")\n     \n      this.checkConnectionWifi()\n\n      // en cas de perte de connexion \n      if(this.current_ssid != this.stored_ssid && this.check){\n        console.log(\"wifi diff >>>> \")\n        console.log(\"reconnexion  >>>> \")\n\n        //connecter au wifi \n        this.ConnecterUPC()\n      }\n\n    \n\n       if(this.tryToRead){\n        console.log(\"Try to read >\")\n\n         // lecture statique :\n         this.isLoading=true;\n\n         this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"namepiege\").then(res=>{   \n         \n          if(res == true){\n            this.isLoading=false;\n            console.log(\">  lecture reussi \")\n            this.subscribeRefresh()\n            this.events.publish(\"loadParameters\")\n            this.global.lectureStatiqueEnCours = false;\n            this.global.displayLoading = false;\n            this.tryToRead=false;\n          }\n          else{ \n                  console.log(\">  lecture echouée  \")\n                  this.isLoading=false;\n                  this.tryToRead=true;\n                  this.global.statutConnexion=\"Aucune\"\n                  this.global.lectureStatiqueEnCours = false;\n                  this.global.displayLoading = false;\n                \n                }      \n        \n        }).catch(err=>{\n          this.tryToRead=true;\n          this.isLoading=false;\n          console.log(\"acceuil::erreur lecture\")\n          console.log(err)\n          \n        })\n\n        //fin de lecture statique :\n\n       }\n\n    },500);\n\n  }\n\n  ngOnInit(){\n    \n  }\n\n\n  async checkConnectionWifi(){\n    let wifi = await WifiWizard2.getConnectedSSID()\n    this.current_ssid=wifi;\n  }\n\n\n  doRefresh(event) {\n    this.ionViewWillEnter();\n    event.target.complete();\n\n}\n\n\n  toZero4(d) {\n    \n    return (\"0000\" + (+d).toString(16)).substr(-4);\n\n  }\n\n\n\n  onChangeName() {\n    console.log(\" Accueil :: ecrir : nome upc  \") \n    this.ecrir(this.correspondancesRegistres.upcNameId,this.name)\n  }\n  onChangePieges() {\n    console.log(\" Accueil :: ecrir : num piege \")   \n    this.ecrir(this.correspondancesRegistres.upcTrapNum,this.nbpiege) \n  }\n\n  ecrir(variable, value){\n    if(variable.type==\"int\"){\n    this.isLoading=true;\n    this.global.upcmodbus.client.setIntInHoldingRegister(variable.adr, variable.dim,value).then(()=>{\n\n      console.log(\"accueil ::  ecriture reussie\")\n     \n      // lecture statique :\n       this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"namepiege\").then(res=>{   \n   \n    if(res == true){\n      this.isLoading=false;\n      console.log(\"accueil:  lecture reussi \")\n\n      this.subscribeRefresh()\n      this.events.publish(\"loadParameters\")\n      this.global.lectureStatiqueEnCours = false;\n      this.global.displayLoading = false;\n      this.tryToRead=false;\n    }\n    else{ \n              this.isLoading=false;\n           \n              this.global.statutConnexion=\"Aucune\"\n              this.global.lectureStatiqueEnCours = false;\n              this.global.displayLoading = false;\n          \n          }      \n  \n  }).catch(err=>{\n    this.isLoading=false;\n    console.log(\"acceuil::erreur lecture\")\n    console.log(err)\n    \n  })\n\n  //fin de lecture statique :\n\n}).catch(()=>{\n  this.isLoading=false;\n  console.log(\"num piege ::écriture impossible\")\n})\n    }else{\n      this.isLoading=true;\n      this.global.upcmodbus.client.setStringArrayInHoldingResgisters(variable.adr,value).then(()=>{\n  \n        console.log(\"accueil ::  ecriture reussie\")\n       \n        // lecture statique :\n         this.global.upcmodbus.onReadStatique(this.global.upcname, this.global.mode, \"namepiege\").then(res=>{   \n     \n      if(res == true){\n        this.isLoading=false;\n        console.log(\"accueil:  lecture reussi \")\n  \n        this.subscribeRefresh()\n        this.events.publish(\"loadParameters\")\n        this.global.lectureStatiqueEnCours = false;\n        this.global.displayLoading = false;\n        this.tryToRead=false;\n      }\n      else{ \n                this.isLoading=false;\n             \n                this.global.statutConnexion=\"Aucune\"\n                this.global.lectureStatiqueEnCours = false;\n                this.global.displayLoading = false;\n            \n            }      \n    \n    }).catch(err=>{\n      this.isLoading=false;\n      console.log(\"acceuil::erreur lecture\")\n      console.log(err)\n      \n    })\n  \n    //fin de lecture statique :\n  \n  }).catch(()=>{\n    this.isLoading=false;\n    console.log(\"num piege ::écriture impossible\")\n  })\n\n    }\n  }\n  /*async onWipe() {\n    let alert = await this.alertCTRL.create({message : \"Êtes vous sûr d'effectuer un Wipe ?\",\n                                             buttons : [{text : \"Non\"},{text : \"Oui\",handler : ()=>{\n                                              this.global.onWriteModbusVariables().then(res=>{\n                                                var d = new Date()\n                                                this.global.logs.push(this.global.msToTime(d.getTime())+\" - début écriture\")\n                                                this.global.ecritureEnCours = true;\n                                                this.global.upcmodbus.client.setIntInHoldingRegister(40011,1,61166).then(res=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture réussie\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false;    \n                                                }).catch(err=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture échouée\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false;\n                                                })   \n                                              })\n                                             }}]\n                                      })\n    alert.present();\n  }\n\n  async onReset() {\n    let alert = await this.alertCTRL.create({message : \"Êtes vous sûr d'effectuer un Reset ?\",\n                                             buttons : [{text : \"Non\"},{text : \"Oui\", handler : ()=>{\n                                              this.global.onWriteModbusVariables().then(res=>{\n                                                var d = new Date()\n                                                this.global.logs.push(this.global.msToTime(d.getTime())+\" - début écriture\")\n                                                this.global.ecritureEnCours = true;\n                                                this.global.upcmodbus.client.setIntInHoldingRegister(40011,1,65535).then(res=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture réussie\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false;                                                \n                                                }).catch(err=>{\n                                                  var d = new Date()\n                                                  this.global.logs.push(this.global.msToTime(d.getTime())+\" - écriture échouée\")\n                                                  this.subscribeRefresh()\n                                                  this.global.ecritureEnCours = false; \n                                                })                                                 \n                                              })\n                                                \n                                              \n                                             }}]\n    })\n    alert.present();\n    \n  }*/\n  onChangeFusHor(){    \n    var d=new Date()\n    this.global.logs.push(this.global.msToTime(d.getTime())+\" - appel on change fushor\")\n    this.global.onWriteEnable(this.correspondancesRegistres.upcTimeZone,this.fusehor)\n   \n  }\n  \n  unsubscribeRefresh(){    \n    this.events.unsubscribe(\"loadParameters\")\n  }\n\n  subscribeRefresh(){\n    var d=new Date()\n    this.global.logs.push(this.global.msToTime(d.getTime())+\" - subscribe\")\n    this.events.subscribe(\"loadParameters\",($event)=>{\n            \n      this.name = this.global.upcmodbus.nameId;\n      this.length = this.name.length;\n    \n\n      this.nbpiege = this.global.upcmodbus.general.upcTrapNum;\n\n      this.uuid = this.global.upcmodbus.general.upcMcuUid;\n\n      this.fusehor = this.global.upcmodbus.general.upcTimeZone;\n\n      this.firm = \"\"+ this.global.upcmodbus.general.upcFwVer;\n\n  \n        this.horloge = this.global.upcmodbus.general.upcClock;\n    })\n        \n  }\n\n  ionViewWillLeave(){\n\n\n    console.log(\"quitter la page  :\")  \n    clearInterval(this.do)\n\n  }\n\n}\n"],"sourceRoot":""}